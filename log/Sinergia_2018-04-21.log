21/04/2018-13:40:40,459 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-13:40:40,476 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:40:40,478 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:40:40,484 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-13:40:40,485 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:40:40,485 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-13:40:40,859 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-13:40:40,859 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:40:40,860 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:40:40,860 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:40:40,860 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:40:40,860 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:40:40,860 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:40:40,861 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-13:40:40,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:40:40,868 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-13:40:40,872 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-13:40:40,874 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 13:40:40 
21/04/2018-13:40:41,090 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:40:41,091 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:40:41,098 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:40:41,099 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:40:41,104 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:40:41,116 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 10ms 
21/04/2018-13:40:41,166 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:40:41,167 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:40:41,168 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-13:40:41,169 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-13:40:41,169 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:40:41,169 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-13:40:41,169 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-13:40:41,171 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-13:40:41,190 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:40:41,190 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:40:41,312 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:40:41,313 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:40:41,319 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:40:41,326 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-13:40:41,417 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:40:41,418 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:40:41,487 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:40:41,488 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:40:41,552 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-13:40:41,553 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:40:43,807 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-13:40:43,808 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-13:40:43,808 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:40:43,847 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 39ms 
21/04/2018-13:40:45,562 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:40:45,563 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-13:40:49,183 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-13:40:49,487 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-13:44:41,902 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-13:44:41,916 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:44:41,917 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:44:41,921 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-13:44:41,922 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:44:41,923 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:44:42,334 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-13:44:42,334 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:44:42,334 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:44:42,335 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:44:42,335 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:44:42,335 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:44:42,335 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:44:42,335 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-13:44:42,338 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:44:42,341 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-13:44:42,345 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-13:44:42,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 13:44:42 
21/04/2018-13:44:42,587 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:44:42,588 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:44:42,595 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:44:42,596 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:44:42,603 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:44:42,609 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-13:44:42,660 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:44:42,662 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:44:42,663 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-13:44:42,663 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-13:44:42,664 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:44:42,664 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-13:44:42,664 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-13:44:42,666 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-13:44:42,674 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:44:42,674 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:44:42,808 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:44:42,808 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:44:42,814 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:44:42,820 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-13:44:42,919 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:44:42,920 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:44:43,010 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:44:43,011 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:44:43,117 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-13:44:43,118 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:44:46,160 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-13:44:46,161 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-13:44:46,161 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:44:46,162 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:44:47,685 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:44:47,686 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-13:44:56,229 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-13:44:58,586 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-13:48:43,387 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-13:48:43,402 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:48:43,403 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:48:43,408 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-13:48:43,409 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:48:43,409 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-13:48:43,818 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-13:48:43,819 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:48:43,819 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:48:43,820 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:48:43,821 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:48:43,821 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:48:43,821 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:48:43,822 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-13:48:43,824 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:48:43,828 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-13:48:43,831 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-13:48:43,833 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 13:48:43 
21/04/2018-13:48:44,099 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:48:44,100 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:48:44,107 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:48:44,108 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:48:44,115 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:48:44,123 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-13:48:44,183 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:48:44,185 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:48:44,187 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-13:48:44,187 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-13:48:44,188 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:48:44,188 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-13:48:44,188 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-13:48:44,189 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:48:44,199 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:48:44,200 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:48:44,329 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:48:44,329 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:48:44,336 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:48:44,341 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 5ms 
21/04/2018-13:48:44,439 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:48:44,440 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:48:44,504 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:48:44,504 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:48:44,565 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-13:48:44,566 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:48:47,031 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-13:48:47,032 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-13:48:47,032 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:48:47,033 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:48:51,868 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-13:48:51,870 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-13:49:19,348 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-13:49:19,587 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-13:49:23,254 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-13:49:23,269 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:49:23,270 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:49:23,277 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-13:49:23,277 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:49:23,278 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:49:23,657 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-13:49:23,658 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:49:23,658 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:49:23,659 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:49:23,659 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:49:23,659 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:49:23,659 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:49:23,659 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-13:49:23,662 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:49:23,664 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-13:49:23,668 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-13:49:23,671 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 13:49:23 
21/04/2018-13:49:23,908 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:49:23,909 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:49:23,915 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:49:23,917 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 2ms 
21/04/2018-13:49:23,922 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:49:23,929 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-13:49:23,973 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:49:23,973 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:49:23,975 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-13:49:23,975 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-13:49:23,976 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:49:23,976 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-13:49:23,976 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-13:49:23,978 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-13:49:23,996 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:49:23,997 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:49:24,117 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:49:24,118 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:49:24,124 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:49:24,132 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-13:49:24,241 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:49:24,242 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:49:24,319 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:49:24,320 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:49:24,392 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-13:49:24,393 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:49:26,657 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-13:49:26,658 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-13:49:26,658 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:49:26,659 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:49:28,475 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-13:49:28,477 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-13:50:45,111 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-13:50:45,431 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-13:50:51,563 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-13:50:51,587 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:50:51,589 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:50:51,595 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-13:50:51,595 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:50:51,596 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:50:51,974 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-13:50:51,974 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:50:51,975 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:50:51,975 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:50:51,975 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:50:51,975 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:50:51,975 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:50:51,976 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-13:50:51,978 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:50:51,980 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-13:50:51,984 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-13:50:51,987 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 13:50:51 
21/04/2018-13:50:52,226 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:50:52,227 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:50:52,234 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:50:52,235 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:50:52,241 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:50:52,247 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-13:50:52,307 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:50:52,308 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:50:52,309 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-13:50:52,309 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-13:50:52,310 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:50:52,310 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-13:50:52,310 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-13:50:52,311 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:50:52,321 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:50:52,322 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:50:52,435 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:50:52,437 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 2ms 
21/04/2018-13:50:52,443 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:50:52,451 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-13:50:52,546 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:50:52,547 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:50:52,625 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:50:52,627 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 2ms 
21/04/2018-13:50:52,697 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-13:50:52,697 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:50:55,008 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-13:50:55,008 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-13:50:55,009 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:50:55,009 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 0ms 
21/04/2018-13:50:55,940 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-13:50:55,942 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-13:51:07,510 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-13:51:07,888 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-13:53:51,803 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-13:53:51,818 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:53:51,819 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:53:51,824 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-13:53:51,824 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:53:51,825 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:53:52,207 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-13:53:52,208 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:53:52,208 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:53:52,208 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:53:52,208 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:53:52,209 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:53:52,209 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:53:52,209 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-13:53:52,211 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:53:52,214 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-13:53:52,220 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-13:53:52,222 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 13:53:52 
21/04/2018-13:53:52,458 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:53:52,459 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:53:52,465 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:53:52,467 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 2ms 
21/04/2018-13:53:52,472 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:53:52,479 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-13:53:52,517 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:53:52,517 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:53:52,519 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-13:53:52,519 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-13:53:52,520 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:53:52,520 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-13:53:52,520 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-13:53:52,521 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:53:52,532 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:53:52,532 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:53:52,674 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:53:52,675 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:53:52,681 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:53:52,688 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-13:53:52,791 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:53:52,791 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:53:52,858 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:53:52,859 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:53:52,922 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-13:53:52,923 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:53:55,239 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-13:53:55,239 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-13:53:55,240 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:53:55,240 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 0ms 
21/04/2018-13:53:56,267 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-13:53:56,269 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-13:54:04,711 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-13:54:05,241 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-13:54:28,751 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-13:54:28,769 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:54:28,770 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-13:54:28,774 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-13:54:28,774 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:54:28,776 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:54:29,158 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-13:54:29,159 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:54:29,159 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:54:29,159 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:54:29,160 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:54:29,160 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:54:29,160 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:54:29,160 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-13:54:29,162 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:54:29,165 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-13:54:29,169 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-13:54:29,171 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 13:54:29 
21/04/2018-13:54:29,380 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:54:29,381 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:54:29,388 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:54:29,389 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:54:29,395 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:54:29,404 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 9ms 
21/04/2018-13:54:29,462 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:54:29,463 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:54:29,464 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-13:54:29,465 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-13:54:29,465 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:54:29,466 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-13:54:29,466 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-13:54:29,467 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:54:29,485 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:54:29,486 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:54:29,607 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:54:29,608 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:54:29,613 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:54:29,619 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-13:54:29,711 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:54:29,711 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:54:29,786 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:54:29,787 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:54:29,850 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-13:54:29,851 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:54:32,135 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-13:54:32,136 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-13:54:32,136 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:54:32,137 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:54:35,960 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-13:54:35,962 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-13:54:36,021 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:40,894 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:41,991 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:42,578 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:43,005 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:43,202 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:43,397 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:43,637 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:43,877 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:44,110 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:44,334 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:44,506 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:44,675 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:44,815 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:45,029 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:45,194 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:45,439 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:45,590 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:45,737 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:45,880 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:46,030 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:46,209 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:46,362 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:46,505 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:46,679 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:46,822 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:46,994 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:47,208 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:47,364 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:47,542 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:47,703 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:47,855 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:47,998 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:48,153 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:48,297 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:48,442 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:48,579 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:48,735 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:48,873 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:49,026 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:49,195 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:49,365 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:49,570 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:49,723 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:49,913 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:50,040 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:50,224 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:50,782 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:51,692 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:51,995 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:53,092 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:53,360 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:53,442 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:53,720 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:53,842 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:54,039 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:54,128 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:54,388 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:54,557 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:54,709 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:241)
	at com.sun.javafx.scene.control.skin.TableViewSkin.resizeColumnToFitContent(TableViewSkin.java:54)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.doColumnAutoSize(TableColumnHeader.java:531)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.updateScene(TableColumnHeader.java:474)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.handlePropertyChanged(TableColumnHeader.java:314)
	at com.sun.javafx.scene.control.skin.TableColumnHeader.lambda$new$49(TableColumnHeader.java:149)
	at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55)
	at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89)
	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent(ReadOnlyObjectPropertyBase.java:74)
	at javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent(ReadOnlyObjectWrapper.java:102)
	at javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent(Node.java:831)
	at javafx.scene.Node.invalidatedScenes(Node.java:883)
	at javafx.scene.Node.setScenes(Node.java:921)
	at javafx.scene.Parent$1.onChanged(Parent.java:269)
	at com.sun.javafx.collections.TrackableObservableList.lambda$new$29(TrackableObservableList.java:45)
	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233)
	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205)
	at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90)
	at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:116)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateContent(NestedTableColumnHeader.java:487)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.updateTableColumnHeaders(NestedTableColumnHeader.java:317)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.checkState(NestedTableColumnHeader.java:544)
	at com.sun.javafx.scene.control.skin.NestedTableColumnHeader.computePrefHeight(NestedTableColumnHeader.java:427)
	at javafx.scene.Parent.prefHeight(Parent.java:929)
	at javafx.scene.layout.Region.prefHeight(Region.java:1435)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computePrefHeight(TableHeaderRow.java:331)
	at com.sun.javafx.scene.control.skin.TableHeaderRow.computeMinHeight(TableHeaderRow.java:324)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.control.SkinBase.computeMinHeight(SkinBase.java:254)
	at javafx.scene.control.Control.computeMinHeight(Control.java:489)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.computeChildMinAreaHeight(Region.java:1697)
	at javafx.scene.layout.VBox.getAreaHeights(VBox.java:436)
	at javafx.scene.layout.VBox.computeContentHeight(VBox.java:518)
	at javafx.scene.layout.VBox.computeMinHeight(VBox.java:396)
	at javafx.scene.Parent.minHeight(Parent.java:957)
	at javafx.scene.layout.Region.minHeight(Region.java:1401)
	at javafx.scene.layout.Region.boundedNodeSizeWithBias(Region.java:1917)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2323)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2238)
	at javafx.scene.layout.Region.layoutInArea(Region.java:2179)
	at javafx.scene.layout.StackPane.layoutChildren(StackPane.java:342)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:54,851 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.updateCells(TableRowSkinBase.java:533)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.init(TableRowSkinBase.java:147)
	at com.sun.javafx.scene.control.skin.TableRowSkin.<init>(TableRowSkin.java:64)
	at javafx.scene.control.TableRow.createDefaultSkin(TableRow.java:212)
	at javafx.scene.control.Control.impl_processCSS(Control.java:872)
	at javafx.scene.Node.processCSS(Node.java:9058)
	at javafx.scene.Node.applyCss(Node.java:9155)
	at com.sun.javafx.scene.control.skin.VirtualFlow.setCellIndex(VirtualFlow.java:1964)
	at com.sun.javafx.scene.control.skin.VirtualFlow.getCell(VirtualFlow.java:1797)
	at com.sun.javafx.scene.control.skin.VirtualFlow.getCellLength(VirtualFlow.java:1879)
	at com.sun.javafx.scene.control.skin.VirtualFlow.computeViewportOffset(VirtualFlow.java:2528)
	at com.sun.javafx.scene.control.skin.VirtualFlow.layoutChildren(VirtualFlow.java:1189)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:54,872 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.updateCells(TableRowSkinBase.java:533)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.init(TableRowSkinBase.java:147)
	at com.sun.javafx.scene.control.skin.TableRowSkin.<init>(TableRowSkin.java:64)
	at javafx.scene.control.TableRow.createDefaultSkin(TableRow.java:212)
	at javafx.scene.control.Control.impl_processCSS(Control.java:872)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.control.Control.impl_processCSS(Control.java:868)
	at javafx.scene.Node.processCSS(Node.java:9058)
	at javafx.scene.Node.processCSS(Node.java:9051)
	at javafx.scene.Node.processCSS(Node.java:9051)
	at javafx.scene.Scene.doCSSPass(Scene.java:545)
	at javafx.scene.Scene.access$3600(Scene.java:159)
	at javafx.scene.Scene$ScenePulseListener.pulse(Scene.java:2392)
	at com.sun.javafx.tk.Toolkit.lambda$runPulse$29(Toolkit.java:398)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.Toolkit.runPulse(Toolkit.java:397)
	at com.sun.javafx.tk.Toolkit.firePulse(Toolkit.java:424)
	at com.sun.javafx.tk.quantum.QuantumToolkit.pulse(QuantumToolkit.java:518)
	at com.sun.javafx.tk.quantum.PaintCollector.liveRepaintRenderJob(PaintCollector.java:320)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$ViewEventNotification.run(GlassViewEventHandler.java:861)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$ViewEventNotification.run(GlassViewEventHandler.java:822)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleViewEvent$367(GlassViewEventHandler.java:901)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleViewEvent(GlassViewEventHandler.java:900)
	at com.sun.glass.ui.View.handleViewEvent(View.java:539)
	at com.sun.glass.ui.View.notifyResize(View.java:875)
	at com.sun.glass.ui.win.WinWindow._setResizable(Native Method)
	at com.sun.glass.ui.Window.setResizable(Window.java:649)
	at com.sun.javafx.tk.quantum.WindowStage.setResizable(WindowStage.java:583)
	at javafx.stage.Stage.impl_visibleChanged(Stage.java:1180)
	at javafx.stage.Window$9.invalidated(Window.java:913)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at javafx.stage.Stage.showAndWait(Stage.java:472)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:27)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.updateCells(TableRowSkinBase.java:533)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.init(TableRowSkinBase.java:147)
	at com.sun.javafx.scene.control.skin.TableRowSkin.<init>(TableRowSkin.java:64)
	at javafx.scene.control.TableRow.createDefaultSkin(TableRow.java:212)
	at javafx.scene.control.Control.impl_processCSS(Control.java:872)
	at javafx.scene.Node.processCSS(Node.java:9058)
	at javafx.scene.Node.applyCss(Node.java:9155)
	at com.sun.javafx.scene.control.skin.VirtualFlow.setCellIndex(VirtualFlow.java:1964)
	at com.sun.javafx.scene.control.skin.VirtualFlow.getCell(VirtualFlow.java:1797)
	at com.sun.javafx.scene.control.skin.VirtualFlow.getCellLength(VirtualFlow.java:1879)
	at com.sun.javafx.scene.control.skin.VirtualFlow.computeViewportOffset(VirtualFlow.java:2528)
	at com.sun.javafx.scene.control.skin.VirtualFlow.layoutChildren(VirtualFlow.java:1189)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:55,094 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.updateCells(TableRowSkinBase.java:533)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.init(TableRowSkinBase.java:147)
	at com.sun.javafx.scene.control.skin.TableRowSkin.<init>(TableRowSkin.java:64)
	at javafx.scene.control.TableRow.createDefaultSkin(TableRow.java:212)
	at javafx.scene.control.Control.impl_processCSS(Control.java:872)
	at javafx.scene.Node.processCSS(Node.java:9058)
	at javafx.scene.Node.applyCss(Node.java:9155)
	at com.sun.javafx.scene.control.skin.VirtualFlow.setCellIndex(VirtualFlow.java:1964)
	at com.sun.javafx.scene.control.skin.VirtualFlow.getCell(VirtualFlow.java:1797)
	at com.sun.javafx.scene.control.skin.VirtualFlow.getCellLength(VirtualFlow.java:1879)
	at com.sun.javafx.scene.control.skin.VirtualFlow.computeViewportOffset(VirtualFlow.java:2528)
	at com.sun.javafx.scene.control.skin.VirtualFlow.layoutChildren(VirtualFlow.java:1189)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:55,119 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.updateCells(TableRowSkinBase.java:533)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.init(TableRowSkinBase.java:147)
	at com.sun.javafx.scene.control.skin.TableRowSkin.<init>(TableRowSkin.java:64)
	at javafx.scene.control.TableRow.createDefaultSkin(TableRow.java:212)
	at javafx.scene.control.Control.impl_processCSS(Control.java:872)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.control.Control.impl_processCSS(Control.java:868)
	at javafx.scene.Node.processCSS(Node.java:9058)
	at javafx.scene.Node.processCSS(Node.java:9051)
	at javafx.scene.Node.processCSS(Node.java:9051)
	at javafx.scene.Scene.doCSSPass(Scene.java:545)
	at javafx.scene.Scene.access$3600(Scene.java:159)
	at javafx.scene.Scene$ScenePulseListener.pulse(Scene.java:2392)
	at com.sun.javafx.tk.Toolkit.lambda$runPulse$29(Toolkit.java:398)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.Toolkit.runPulse(Toolkit.java:397)
	at com.sun.javafx.tk.Toolkit.firePulse(Toolkit.java:424)
	at com.sun.javafx.tk.quantum.QuantumToolkit.pulse(QuantumToolkit.java:518)
	at com.sun.javafx.tk.quantum.PaintCollector.liveRepaintRenderJob(PaintCollector.java:320)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$ViewEventNotification.run(GlassViewEventHandler.java:861)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$ViewEventNotification.run(GlassViewEventHandler.java:822)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleViewEvent$367(GlassViewEventHandler.java:901)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleViewEvent(GlassViewEventHandler.java:900)
	at com.sun.glass.ui.View.handleViewEvent(View.java:539)
	at com.sun.glass.ui.View.notifyResize(View.java:875)
	at com.sun.glass.ui.win.WinWindow._setResizable(Native Method)
	at com.sun.glass.ui.Window.setResizable(Window.java:649)
	at com.sun.javafx.tk.quantum.WindowStage.setResizable(WindowStage.java:583)
	at javafx.stage.Stage.impl_visibleChanged(Stage.java:1180)
	at javafx.stage.Window$9.invalidated(Window.java:913)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at javafx.stage.Stage.showAndWait(Stage.java:472)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:27)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.updateCells(TableRowSkinBase.java:533)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.init(TableRowSkinBase.java:147)
	at com.sun.javafx.scene.control.skin.TableRowSkin.<init>(TableRowSkin.java:64)
	at javafx.scene.control.TableRow.createDefaultSkin(TableRow.java:212)
	at javafx.scene.control.Control.impl_processCSS(Control.java:872)
	at javafx.scene.Node.processCSS(Node.java:9058)
	at javafx.scene.Node.applyCss(Node.java:9155)
	at com.sun.javafx.scene.control.skin.VirtualFlow.setCellIndex(VirtualFlow.java:1964)
	at com.sun.javafx.scene.control.skin.VirtualFlow.getCell(VirtualFlow.java:1797)
	at com.sun.javafx.scene.control.skin.VirtualFlow.getCellLength(VirtualFlow.java:1879)
	at com.sun.javafx.scene.control.skin.VirtualFlow.computeViewportOffset(VirtualFlow.java:2528)
	at com.sun.javafx.scene.control.skin.VirtualFlow.layoutChildren(VirtualFlow.java:1189)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:55,229 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.updateCells(TableRowSkinBase.java:533)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.init(TableRowSkinBase.java:147)
	at com.sun.javafx.scene.control.skin.TableRowSkin.<init>(TableRowSkin.java:64)
	at javafx.scene.control.TableRow.createDefaultSkin(TableRow.java:212)
	at javafx.scene.control.Control.impl_processCSS(Control.java:872)
	at javafx.scene.Node.processCSS(Node.java:9058)
	at javafx.scene.Node.applyCss(Node.java:9155)
	at com.sun.javafx.scene.control.skin.VirtualFlow.setCellIndex(VirtualFlow.java:1964)
	at com.sun.javafx.scene.control.skin.VirtualFlow.addLeadingCells(VirtualFlow.java:1246)
	at com.sun.javafx.scene.control.skin.VirtualFlow.layoutChildren(VirtualFlow.java:1194)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:54:55,254 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.updateCells(TableRowSkinBase.java:533)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.init(TableRowSkinBase.java:147)
	at com.sun.javafx.scene.control.skin.TableRowSkin.<init>(TableRowSkin.java:64)
	at javafx.scene.control.TableRow.createDefaultSkin(TableRow.java:212)
	at javafx.scene.control.Control.impl_processCSS(Control.java:872)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.control.Control.impl_processCSS(Control.java:868)
	at javafx.scene.Node.processCSS(Node.java:9058)
	at javafx.scene.Node.processCSS(Node.java:9051)
	at javafx.scene.Node.processCSS(Node.java:9051)
	at javafx.scene.Scene.doCSSPass(Scene.java:545)
	at javafx.scene.Scene.access$3600(Scene.java:159)
	at javafx.scene.Scene$ScenePulseListener.pulse(Scene.java:2392)
	at com.sun.javafx.tk.Toolkit.lambda$runPulse$29(Toolkit.java:398)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.Toolkit.runPulse(Toolkit.java:397)
	at com.sun.javafx.tk.Toolkit.firePulse(Toolkit.java:424)
	at com.sun.javafx.tk.quantum.QuantumToolkit.pulse(QuantumToolkit.java:518)
	at com.sun.javafx.tk.quantum.PaintCollector.liveRepaintRenderJob(PaintCollector.java:320)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$ViewEventNotification.run(GlassViewEventHandler.java:861)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$ViewEventNotification.run(GlassViewEventHandler.java:822)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleViewEvent$367(GlassViewEventHandler.java:901)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleViewEvent(GlassViewEventHandler.java:900)
	at com.sun.glass.ui.View.handleViewEvent(View.java:539)
	at com.sun.glass.ui.View.notifyResize(View.java:875)
	at com.sun.glass.ui.win.WinWindow._setResizable(Native Method)
	at com.sun.glass.ui.Window.setResizable(Window.java:649)
	at com.sun.javafx.tk.quantum.WindowStage.setResizable(WindowStage.java:583)
	at javafx.stage.Stage.impl_visibleChanged(Stage.java:1180)
	at javafx.stage.Window$9.invalidated(Window.java:913)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at javafx.stage.Stage.showAndWait(Stage.java:472)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:27)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.updateCells(TableRowSkinBase.java:533)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.init(TableRowSkinBase.java:147)
	at com.sun.javafx.scene.control.skin.TableRowSkin.<init>(TableRowSkin.java:64)
	at javafx.scene.control.TableRow.createDefaultSkin(TableRow.java:212)
	at javafx.scene.control.Control.impl_processCSS(Control.java:872)
	at javafx.scene.Node.processCSS(Node.java:9058)
	at javafx.scene.Node.applyCss(Node.java:9155)
	at com.sun.javafx.scene.control.skin.VirtualFlow.setCellIndex(VirtualFlow.java:1964)
	at com.sun.javafx.scene.control.skin.VirtualFlow.addLeadingCells(VirtualFlow.java:1246)
	at com.sun.javafx.scene.control.skin.VirtualFlow.layoutChildren(VirtualFlow.java:1194)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:55:02,153 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.updateCells(TableRowSkinBase.java:533)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.init(TableRowSkinBase.java:147)
	at com.sun.javafx.scene.control.skin.TableRowSkin.<init>(TableRowSkin.java:64)
	at javafx.scene.control.TableRow.createDefaultSkin(TableRow.java:212)
	at javafx.scene.control.Control.impl_processCSS(Control.java:872)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.control.Control.impl_processCSS(Control.java:868)
	at javafx.scene.Node.processCSS(Node.java:9058)
	at javafx.scene.Node.processCSS(Node.java:9051)
	at javafx.scene.Node.processCSS(Node.java:9051)
	at javafx.scene.Scene.doCSSPass(Scene.java:545)
	at javafx.scene.Scene.access$3600(Scene.java:159)
	at javafx.scene.Scene$ScenePulseListener.pulse(Scene.java:2392)
	at com.sun.javafx.tk.Toolkit.lambda$runPulse$29(Toolkit.java:398)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.Toolkit.runPulse(Toolkit.java:397)
	at com.sun.javafx.tk.Toolkit.firePulse(Toolkit.java:424)
	at com.sun.javafx.tk.quantum.QuantumToolkit.pulse(QuantumToolkit.java:518)
	at com.sun.javafx.tk.quantum.QuantumToolkit.pulse(QuantumToolkit.java:498)
	at com.sun.javafx.tk.quantum.QuantumToolkit.pulseFromQueue(QuantumToolkit.java:491)
	at com.sun.javafx.tk.quantum.QuantumToolkit.lambda$runToolkit$403(QuantumToolkit.java:319)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:590)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:27)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.updateCells(TableRowSkinBase.java:533)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.init(TableRowSkinBase.java:147)
	at com.sun.javafx.scene.control.skin.TableRowSkin.<init>(TableRowSkin.java:64)
	at javafx.scene.control.TableRow.createDefaultSkin(TableRow.java:212)
	at javafx.scene.control.Control.impl_processCSS(Control.java:872)
	at javafx.scene.Node.processCSS(Node.java:9058)
	at javafx.scene.Node.applyCss(Node.java:9155)
	at com.sun.javafx.scene.control.skin.VirtualFlow.setCellIndex(VirtualFlow.java:1964)
	at com.sun.javafx.scene.control.skin.VirtualFlow.addLeadingCells(VirtualFlow.java:1246)
	at com.sun.javafx.scene.control.skin.VirtualFlow.layoutChildren(VirtualFlow.java:1194)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:55:02,165 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.updateCells(TableRowSkinBase.java:533)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.init(TableRowSkinBase.java:147)
	at com.sun.javafx.scene.control.skin.TableRowSkin.<init>(TableRowSkin.java:64)
	at javafx.scene.control.TableRow.createDefaultSkin(TableRow.java:212)
	at javafx.scene.control.Control.impl_processCSS(Control.java:872)
	at javafx.scene.Node.processCSS(Node.java:9058)
	at javafx.scene.Node.applyCss(Node.java:9155)
	at com.sun.javafx.scene.control.skin.VirtualFlow.setCellIndex(VirtualFlow.java:1964)
	at com.sun.javafx.scene.control.skin.VirtualFlow.addLeadingCells(VirtualFlow.java:1246)
	at com.sun.javafx.scene.control.skin.VirtualFlow.layoutChildren(VirtualFlow.java:1194)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:55:02,187 | ERROR [class br.com.cinemafx.methods.Functions] : Erro ao tentar formatar data
Cannot format given Object as a Date 
java.lang.IllegalArgumentException: Cannot format given Object as a Date
	at java.text.DateFormat.format(DateFormat.java:310)
	at java.text.Format.format(Format.java:157)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:25)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.updateCells(TableRowSkinBase.java:533)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.init(TableRowSkinBase.java:147)
	at com.sun.javafx.scene.control.skin.TableRowSkin.<init>(TableRowSkin.java:64)
	at javafx.scene.control.TableRow.createDefaultSkin(TableRow.java:212)
	at javafx.scene.control.Control.impl_processCSS(Control.java:872)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.Parent.impl_processCSS(Parent.java:1280)
	at javafx.scene.control.Control.impl_processCSS(Control.java:868)
	at javafx.scene.Node.processCSS(Node.java:9058)
	at javafx.scene.Node.processCSS(Node.java:9051)
	at javafx.scene.Node.processCSS(Node.java:9051)
	at javafx.scene.Scene.doCSSPass(Scene.java:545)
	at javafx.scene.Scene.access$3600(Scene.java:159)
	at javafx.scene.Scene$ScenePulseListener.pulse(Scene.java:2392)
	at com.sun.javafx.tk.Toolkit.lambda$runPulse$29(Toolkit.java:398)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.Toolkit.runPulse(Toolkit.java:397)
	at com.sun.javafx.tk.Toolkit.firePulse(Toolkit.java:424)
	at com.sun.javafx.tk.quantum.QuantumToolkit.pulse(QuantumToolkit.java:518)
	at com.sun.javafx.tk.quantum.PaintCollector.liveRepaintRenderJob(PaintCollector.java:320)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$ViewEventNotification.run(GlassViewEventHandler.java:861)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$ViewEventNotification.run(GlassViewEventHandler.java:822)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleViewEvent$367(GlassViewEventHandler.java:901)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleViewEvent(GlassViewEventHandler.java:900)
	at com.sun.glass.ui.View.handleViewEvent(View.java:539)
	at com.sun.glass.ui.View.notifyResize(View.java:875)
	at com.sun.glass.ui.win.WinWindow._setResizable(Native Method)
	at com.sun.glass.ui.Window.setResizable(Window.java:649)
	at com.sun.javafx.tk.quantum.WindowStage.setResizable(WindowStage.java:583)
	at javafx.stage.Stage.impl_visibleChanged(Stage.java:1180)
	at javafx.stage.Window$9.invalidated(Window.java:913)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at javafx.stage.Stage.showAndWait(Stage.java:472)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at br.com.cinemafx.methods.Functions.getDataFormatted(Functions.java:27)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:118)
	at br.com.cinemafx.models.ModelTableColumn$5.updateItem(ModelTableColumn.java:116)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.updateCells(TableRowSkinBase.java:533)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.init(TableRowSkinBase.java:147)
	at com.sun.javafx.scene.control.skin.TableRowSkin.<init>(TableRowSkin.java:64)
	at javafx.scene.control.TableRow.createDefaultSkin(TableRow.java:212)
	at javafx.scene.control.Control.impl_processCSS(Control.java:872)
	at javafx.scene.Node.processCSS(Node.java:9058)
	at javafx.scene.Node.applyCss(Node.java:9155)
	at com.sun.javafx.scene.control.skin.VirtualFlow.setCellIndex(VirtualFlow.java:1964)
	at com.sun.javafx.scene.control.skin.VirtualFlow.addLeadingCells(VirtualFlow.java:1246)
	at com.sun.javafx.scene.control.skin.VirtualFlow.layoutChildren(VirtualFlow.java:1194)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$9.invalidated(Window.java:864)
	at javafx.beans.property.BooleanPropertyBase.markInvalid(BooleanPropertyBase.java:109)
	at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:144)
	at javafx.stage.Window.setShowing(Window.java:940)
	at javafx.stage.Window.show(Window.java:955)
	at javafx.stage.Stage.show(Stage.java:259)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:92)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$2(KeySearchStage.java:87)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-13:56:10,677 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-13:56:10,697 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:56:10,698 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:56:10,703 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-13:56:10,704 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:56:10,705 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:56:11,079 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-13:56:11,080 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:56:11,080 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:56:11,080 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:56:11,080 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:56:11,080 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:56:11,081 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:56:11,081 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-13:56:11,083 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:56:11,086 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-13:56:11,089 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-13:56:11,091 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 13:56:11 
21/04/2018-13:56:11,311 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:56:11,312 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:56:11,319 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:56:11,319 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:56:11,326 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:56:11,333 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-13:56:11,379 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:56:11,380 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:56:11,381 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-13:56:11,381 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-13:56:11,381 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:56:11,382 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-13:56:11,382 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-13:56:11,383 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:56:11,393 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:56:11,394 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:56:11,527 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:56:11,528 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:56:11,534 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:56:11,542 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-13:56:11,640 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:56:11,641 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:56:11,710 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:56:11,711 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:56:11,779 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-13:56:11,780 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:56:14,072 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-13:56:14,073 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-13:56:14,073 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:56:14,074 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:56:15,073 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-13:56:15,075 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-13:57:21,125 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-13:57:21,143 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:57:21,144 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:57:21,149 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-13:57:21,149 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:57:21,150 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-13:57:21,527 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-13:57:21,528 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:57:21,528 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:57:21,528 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:57:21,529 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:57:21,529 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:57:21,529 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:57:21,529 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-13:57:21,531 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:57:21,534 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-13:57:21,538 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-13:57:21,540 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 13:57:21 
21/04/2018-13:57:21,767 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:57:21,768 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:57:21,775 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:57:21,777 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:57:21,782 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:57:21,789 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-13:57:21,834 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:57:21,835 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:57:21,836 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-13:57:21,836 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-13:57:21,837 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:57:21,837 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-13:57:21,837 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-13:57:21,838 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:57:21,855 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:57:21,855 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:57:21,974 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:57:21,975 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:57:21,981 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:57:21,989 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-13:57:22,093 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:57:22,094 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:57:22,160 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:57:22,160 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:57:22,229 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-13:57:22,230 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:57:24,531 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-13:57:24,531 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-13:57:24,531 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:57:24,533 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 2ms 
21/04/2018-13:57:25,198 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-13:57:25,834 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-13:57:27,495 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-13:57:27,497 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-13:57:55,173 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-13:57:57,153 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Cancelar 
21/04/2018-13:57:57,982 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:57:57,983 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-13:57:59,440 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-13:57:59,441 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-13:58:04,900 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:58:04,900 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-13:58:07,334 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-13:58:07,554 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-13:59:49,167 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-13:59:49,184 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:59:49,185 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:59:49,191 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-13:59:49,191 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-13:59:49,192 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:59:49,574 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-13:59:49,574 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:59:49,574 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:59:49,575 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:59:49,575 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:59:49,576 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:59:49,576 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:59:49,576 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-13:59:49,578 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:59:49,581 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-13:59:49,585 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-13:59:49,587 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 13:59:49 
21/04/2018-13:59:49,805 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:59:49,806 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:59:49,812 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:59:49,813 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:59:49,818 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:59:49,825 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-13:59:49,875 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:59:49,875 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:59:49,876 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-13:59:49,877 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-13:59:49,877 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-13:59:49,877 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-13:59:49,877 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-13:59:49,878 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-13:59:49,887 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:59:49,888 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:59:50,023 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-13:59:50,024 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:59:50,030 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-13:59:50,037 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-13:59:50,150 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-13:59:50,151 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:59:50,224 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:59:50,225 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-13:59:50,291 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-13:59:50,292 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-13:59:52,717 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-13:59:52,717 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-13:59:52,717 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-13:59:52,718 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 0ms 
21/04/2018-13:59:53,470 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-13:59:53,498 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-13:59:57,648 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-13:59:57,648 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-13:59:59,397 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-14:00:00,069 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-14:08:15,313 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-14:08:15,330 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-14:08:15,331 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-14:08:15,337 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-14:08:15,337 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-14:08:15,338 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:08:15,727 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-14:08:15,728 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:08:15,729 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:08:15,729 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:08:15,729 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:08:15,729 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:08:15,729 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:08:15,730 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-14:08:15,732 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:08:15,736 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-14:08:15,740 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-14:08:15,742 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 14:08:15 
21/04/2018-14:08:15,967 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:08:15,968 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:08:15,974 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:08:15,976 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:08:15,981 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:08:15,988 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-14:08:16,023 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:08:16,023 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:08:16,024 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-14:08:16,025 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-14:08:16,026 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:08:16,026 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-14:08:16,027 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-14:08:16,028 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:08:16,037 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:08:16,038 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:08:16,188 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:08:16,189 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:08:16,195 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:08:16,204 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-14:08:16,321 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:08:16,321 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:08:16,394 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:08:16,395 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:08:16,466 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-14:08:16,467 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:08:18,679 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-14:08:18,679 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-14:08:18,680 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:08:18,680 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 0ms 
21/04/2018-14:08:20,104 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:08:20,106 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-14:08:22,151 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:08:22,153 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-14:08:23,732 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:08:23,733 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-14:08:25,176 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:08:25,178 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-14:08:27,239 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:08:27,241 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-14:08:29,676 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:08:29,678 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-14:08:37,343 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:08:37,344 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-14:09:01,908 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-14:09:01,909 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 35 
21/04/2018-14:09:01,909 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 35 
21/04/2018-14:09:01,909 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:09:01,909 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:09:01,909 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:09:01,909 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:09:01,909 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-14:09:01,910 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:09:01,911 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:09:01,911 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-14:09:01,911 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 14:09:01 
21/04/2018-14:09:09,311 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-14:09:09,311 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:09:09,311 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:09:09,311 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:09:09,311 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:09:09,311 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:09:09,311 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:09:09,312 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-14:09:09,312 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:09:09,314 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-14:09:09,315 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-14:09:09,316 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 14:09:09 
21/04/2018-14:09:14,830 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:09:14,833 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 3ms 
21/04/2018-14:09:16,807 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:09:16,808 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-14:09:19,489 | WARN [class br.com.cinemafx.methods.KeySearchStage] : Selecione uma linha para utilização 
21/04/2018-14:09:53,113 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-14:09:53,113 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 53 
21/04/2018-14:09:53,113 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 53 
21/04/2018-14:09:53,113 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:09:53,114 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:09:53,114 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:09:53,114 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:09:53,114 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-14:09:53,114 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:09:53,116 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-14:09:53,116 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-14:09:53,117 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 14:09:53 
21/04/2018-14:09:55,088 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:09:55,091 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-14:09:56,844 | WARN [class br.com.cinemafx.methods.KeySearchStage] : Selecione uma linha para utilização 
21/04/2018-14:10:00,669 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-14:10:00,670 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 54 
21/04/2018-14:10:00,670 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 54 
21/04/2018-14:10:00,670 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:10:00,670 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:10:00,670 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:10:00,670 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:10:00,670 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-14:10:00,670 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:10:00,672 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-14:10:00,672 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-14:10:00,672 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 14:10:00 
21/04/2018-14:10:19,474 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-14:10:20,932 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-14:11:56,642 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-14:11:56,662 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-14:11:56,663 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-14:11:56,669 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-14:11:56,670 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-14:11:56,670 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-14:11:57,074 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-14:11:57,075 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:11:57,075 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:11:57,075 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:11:57,075 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:11:57,075 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:11:57,076 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:11:57,076 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-14:11:57,078 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:11:57,081 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-14:11:57,085 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-14:11:57,087 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 14:11:57 
21/04/2018-14:11:57,369 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:11:57,370 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:11:57,378 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:11:57,378 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:11:57,385 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:11:57,393 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-14:11:57,448 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:11:57,449 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:11:57,451 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-14:11:57,452 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-14:11:57,452 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:11:57,452 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-14:11:57,453 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-14:11:57,454 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:11:57,466 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:11:57,467 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:11:57,626 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:11:57,628 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:11:57,635 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:11:57,644 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 9ms 
21/04/2018-14:11:57,755 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:11:57,756 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:11:57,841 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:11:57,841 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:11:57,917 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-14:11:57,918 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:12:00,059 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-14:12:00,059 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-14:12:00,059 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:12:00,060 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 0ms 
21/04/2018-14:12:13,893 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:12:13,895 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-14:15:11,470 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-14:15:11,487 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-14:15:11,488 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:15:11,493 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-14:15:11,493 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-14:15:11,494 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-14:15:11,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-14:15:11,864 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:15:11,864 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:15:11,864 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:15:11,864 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:15:11,864 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:15:11,865 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:15:11,865 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-14:15:11,868 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:15:11,871 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-14:15:11,874 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-14:15:11,877 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 14:15:11 
21/04/2018-14:15:12,174 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:15:12,175 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:15:12,181 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:15:12,182 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:15:12,188 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:15:12,196 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-14:15:12,249 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:15:12,250 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:15:12,251 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-14:15:12,251 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-14:15:12,252 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:15:12,252 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-14:15:12,252 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-14:15:12,253 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:15:12,272 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:15:12,273 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:15:12,434 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:15:12,435 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:15:12,441 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:15:12,450 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 9ms 
21/04/2018-14:15:12,565 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:15:12,566 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:15:12,642 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:15:12,643 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:15:12,720 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-14:15:12,721 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:15:15,052 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-14:15:15,053 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-14:15:15,053 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:15:15,054 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:15:19,149 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:15:19,203 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-14:15:20,789 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:15:20,790 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-14:15:25,523 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-14:15:25,524 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 51 
21/04/2018-14:15:25,524 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 51 
21/04/2018-14:15:25,524 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:15:25,524 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:15:25,524 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:15:25,524 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:15:25,524 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-14:15:25,525 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:15:25,526 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:15:25,526 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-14:15:25,527 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 14:15:25 
21/04/2018-14:15:27,604 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:15:27,605 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-14:15:36,381 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-14:15:37,483 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-14:16:16,813 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-14:16:16,830 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-14:16:16,831 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:16:16,836 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-14:16:16,837 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-14:16:16,837 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-14:16:17,215 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-14:16:17,216 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:16:17,216 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:16:17,217 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:16:17,217 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:16:17,217 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:16:17,217 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:16:17,217 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-14:16:17,219 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:16:17,223 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-14:16:17,226 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-14:16:17,229 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 14:16:17 
21/04/2018-14:16:17,534 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:16:17,535 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:16:17,542 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:16:17,545 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 2ms 
21/04/2018-14:16:17,556 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:16:17,568 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 11ms 
21/04/2018-14:16:17,635 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:16:17,635 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:16:17,636 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-14:16:17,637 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-14:16:17,637 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:16:17,638 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-14:16:17,638 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-14:16:17,639 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:16:17,647 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:16:17,648 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:16:17,802 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:16:17,803 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:16:17,810 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:16:17,818 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-14:16:17,988 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:16:17,989 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:16:18,063 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:16:18,063 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:16:18,128 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-14:16:18,129 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:16:20,987 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-14:16:20,987 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-14:16:20,987 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:16:20,988 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 0ms 
21/04/2018-14:16:30,481 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-14:16:31,574 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-14:16:32,934 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:16:32,936 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-14:16:37,004 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-14:16:37,123 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-14:18:02,123 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-14:18:02,141 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-14:18:02,142 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:18:02,147 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-14:18:02,148 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-14:18:02,149 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:18:02,505 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-14:18:02,506 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:18:02,506 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:18:02,507 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:18:02,507 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:18:02,507 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:18:02,507 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:18:02,507 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-14:18:02,510 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:18:02,512 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-14:18:02,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-14:18:02,519 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 14:18:02 
21/04/2018-14:18:02,758 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:18:02,759 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:18:02,765 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:18:02,767 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 2ms 
21/04/2018-14:18:02,772 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:18:02,780 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-14:18:02,827 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:18:02,828 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:18:02,829 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-14:18:02,829 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-14:18:02,829 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:18:02,830 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-14:18:02,830 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-14:18:02,831 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:18:02,848 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:18:02,849 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:18:02,956 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:18:02,956 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:18:02,961 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:18:02,966 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 5ms 
21/04/2018-14:18:03,048 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:18:03,048 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:18:03,113 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:18:03,114 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:18:03,175 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-14:18:03,175 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:18:05,347 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-14:18:05,348 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-14:18:05,348 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:18:05,349 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:19:09,092 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : Deseja realmente deslogar do sistema? 
21/04/2018-14:19:09,839 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : Opção selecionada: Deslogar 
21/04/2018-14:19:30,390 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-14:19:30,391 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-14:19:30,391 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-14:19:30,395 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-14:19:30,395 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-14:19:30,395 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-14:19:30,456 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-14:19:30,457 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:19:30,457 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:19:30,457 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:19:30,457 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:19:30,457 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:19:30,457 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:19:30,457 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-14:19:30,458 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:19:30,460 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-14:19:30,462 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-14:19:30,462 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 14:19:30 
21/04/2018-14:19:30,568 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:19:30,568 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:19:30,572 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:19:30,572 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:19:30,575 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:19:30,582 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-14:19:30,607 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:19:30,608 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:19:30,609 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-14:19:30,609 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-14:19:30,609 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:19:30,610 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-14:19:30,610 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-14:19:30,611 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:19:30,616 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:19:30,617 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:19:30,675 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:19:30,675 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:19:30,680 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:19:30,686 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-14:19:30,761 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:19:30,762 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:19:30,809 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:19:30,810 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:19:30,860 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-14:19:30,861 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:19:31,761 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-14:19:31,761 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-14:19:31,762 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:19:31,764 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 2ms 
21/04/2018-14:19:43,417 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:19:43,418 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-14:19:51,317 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:19:51,317 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:19:51,320 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:19:51,320 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:19:51,326 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:19:51,335 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 9ms 
21/04/2018-14:19:51,367 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:19:51,367 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:19:51,368 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-14:19:51,368 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-11 
21/04/2018-14:19:51,368 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:19:51,370 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-14:19:51,370 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-14:19:51,371 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:22:22,816 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:22:22,818 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-14:22:43,465 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-14:22:43,730 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-14:22:51,951 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-14:22:51,982 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-14:22:51,985 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 2ms 
21/04/2018-14:22:51,997 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-14:22:51,997 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-14:22:51,998 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:22:52,464 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-14:22:52,465 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:22:52,465 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:22:52,466 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:22:52,466 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:22:52,466 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:22:52,466 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:22:52,467 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-14:22:52,470 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:22:52,473 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-14:22:52,477 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-14:22:52,479 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 14:22:52 
21/04/2018-14:22:52,751 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:22:52,752 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:22:52,758 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:22:52,759 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:22:52,764 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:22:52,771 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-14:22:52,816 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:22:52,816 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:22:52,818 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-14:22:52,819 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-14:22:52,819 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:22:52,819 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-14:22:52,820 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-14:22:52,821 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:22:52,838 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:22:52,839 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:22:52,980 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:22:52,981 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:22:52,987 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:22:52,993 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-14:22:53,104 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:22:53,104 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:22:53,192 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:22:53,193 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:22:53,249 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-14:22:53,250 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:22:55,998 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-14:22:55,998 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-14:22:55,998 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:22:55,999 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:22:59,538 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:22:59,540 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:22:59,550 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:22:59,563 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 13ms 
21/04/2018-14:22:59,604 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:22:59,605 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:22:59,609 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:22:59,610 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:22:59,613 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSESSAO, CODSALA, CODFILME, CODEXIB, DATAHORA FROM TSESSOES 
21/04/2018-14:22:59,614 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:22:59,645 | WARN [class br.com.cinemafx.controllers.IngressoCtrl] : Sessão não encontrada para código 0 
21/04/2018-14:23:03,769 | WARN [class br.com.cinemafx.controllers.IngressoCtrl] : Sessão não encontrada para código 2 
21/04/2018-14:23:10,677 | WARN [class br.com.cinemafx.controllers.IngressoCtrl] : Sessão não encontrada para código 56789 
21/04/2018-14:23:13,250 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-14:23:13,414 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-14:25:19,476 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-14:25:19,490 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-14:25:19,491 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-14:25:19,496 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-14:25:19,496 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-14:25:19,497 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-14:25:19,839 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-14:25:19,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:25:19,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:25:19,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:25:19,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:25:19,841 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:25:19,841 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:25:19,841 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-14:25:19,843 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:25:19,845 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-14:25:19,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-14:25:19,851 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 14:25:19 
21/04/2018-14:25:20,089 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:25:20,090 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:25:20,096 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:25:20,097 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:25:20,102 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:25:20,109 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-14:25:20,145 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:25:20,146 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:25:20,147 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-14:25:20,147 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-14:25:20,148 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-14:25:20,148 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-14:25:20,148 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-14:25:20,149 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-14:25:20,159 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:25:20,160 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:25:20,286 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:25:20,286 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:25:20,292 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:25:20,300 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-14:25:20,398 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:25:20,399 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:25:20,465 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:25:20,466 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:25:20,534 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-14:25:20,535 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:25:22,666 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-14:25:22,667 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-14:25:22,667 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-14:25:22,668 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 0ms 
21/04/2018-14:25:23,857 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-14:25:23,859 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-14:25:27,117 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-14:25:27,119 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:25:27,130 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-14:25:27,138 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-14:25:27,175 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-14:25:27,175 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:25:27,179 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-14:25:27,180 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-14:25:27,183 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSESSAO, CODSALA, CODFILME, CODEXIB, DATAHORA FROM TSESSOES 
21/04/2018-14:25:27,184 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-14:25:32,509 | WARN [class br.com.cinemafx.controllers.IngressoCtrl] : Sessão não encontrada para código: 18 
21/04/2018-14:25:37,794 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-14:25:38,253 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-15:50:46,360 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-15:50:46,421 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-15:50:46,423 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 2ms 
21/04/2018-15:50:46,428 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-15:50:46,429 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-15:50:46,430 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-15:50:47,182 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-15:50:47,182 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:50:47,183 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:50:47,183 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:50:47,183 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:50:47,183 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:50:47,183 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:50:47,184 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-15:50:47,186 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-15:50:47,189 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-15:50:47,207 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-15:50:47,209 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 15:50:47 
21/04/2018-15:50:47,851 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-15:50:47,852 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-15:50:47,867 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-15:50:47,867 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:50:47,906 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-15:50:47,913 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-15:50:47,998 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-15:50:47,998 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:50:48,009 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-15:50:48,009 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-15:50:48,051 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-15:50:48,054 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-15:50:48,055 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-15:50:48,058 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-15:50:48,096 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-15:50:48,096 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:50:48,273 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-15:50:48,273 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:50:48,279 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-15:50:48,286 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-15:50:48,448 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-15:50:48,449 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-15:50:48,655 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-15:50:48,655 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:50:48,778 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-15:50:48,778 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:50:51,843 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-15:50:51,844 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-15:50:51,844 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:50:51,846 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 2ms 
21/04/2018-15:50:53,020 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-15:50:53,049 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 28ms 
21/04/2018-15:51:03,774 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-15:51:06,341 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Cancelar 
21/04/2018-15:51:11,949 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-15:51:13,245 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-15:54:21,556 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-15:54:21,572 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-15:54:21,573 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-15:54:21,578 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-15:54:21,579 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-15:54:21,579 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-15:54:21,906 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-15:54:21,906 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:54:21,907 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:54:21,907 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:54:21,907 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:54:21,907 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:54:21,908 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:54:21,908 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-15:54:21,910 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-15:54:21,913 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-15:54:21,917 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-15:54:21,919 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 15:54:21 
21/04/2018-15:54:22,171 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-15:54:22,172 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-15:54:22,177 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-15:54:22,178 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-15:54:22,185 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-15:54:22,190 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 5ms 
21/04/2018-15:54:22,225 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-15:54:22,226 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:54:22,227 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-15:54:22,228 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-15:54:22,228 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-15:54:22,228 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-15:54:22,229 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-15:54:22,230 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-15:54:22,247 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-15:54:22,247 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:54:22,359 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-15:54:22,359 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:54:22,365 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-15:54:22,372 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-15:54:22,461 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-15:54:22,461 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:54:22,523 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-15:54:22,523 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:54:22,589 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-15:54:22,590 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-15:54:24,621 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-15:54:24,622 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-15:54:24,622 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:54:24,661 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 39ms 
21/04/2018-15:54:30,648 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-15:54:30,653 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-15:54:32,960 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-15:54:32,963 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-15:55:49,227 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-15:55:49,229 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-15:55:53,626 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-15:55:53,945 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-15:56:07,660 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-15:56:07,674 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-15:56:07,676 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-15:56:07,680 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-15:56:07,681 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-15:56:07,682 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-15:56:08,023 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-15:56:08,024 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:56:08,024 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:56:08,024 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:56:08,024 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:56:08,024 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:56:08,024 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:56:08,025 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-15:56:08,027 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-15:56:08,030 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-15:56:08,033 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-15:56:08,035 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 15:56:08 
21/04/2018-15:56:08,265 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-15:56:08,266 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-15:56:08,272 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-15:56:08,272 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:56:08,277 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-15:56:08,284 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 5ms 
21/04/2018-15:56:08,325 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-15:56:08,326 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:56:08,328 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-15:56:08,328 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-15:56:08,328 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-15:56:08,329 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-15:56:08,329 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-15:56:08,330 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-15:56:08,347 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-15:56:08,347 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:56:08,464 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-15:56:08,465 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-15:56:08,471 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-15:56:08,477 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-15:56:08,576 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-15:56:08,577 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-15:56:08,644 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-15:56:08,645 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-15:56:08,708 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-15:56:08,708 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:56:10,765 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-15:56:10,765 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-15:56:10,765 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:56:10,766 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-15:56:13,456 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-15:56:13,458 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-15:57:18,339 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-15:57:18,651 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-15:57:25,436 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-15:57:25,451 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-15:57:25,452 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-15:57:25,456 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-15:57:25,457 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-15:57:25,457 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-15:57:25,818 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-15:57:25,819 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:57:25,819 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:57:25,819 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:57:25,820 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:57:25,820 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:57:25,820 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:57:25,820 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-15:57:25,823 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-15:57:25,826 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-15:57:25,830 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-15:57:25,832 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 15:57:25 
21/04/2018-15:57:26,104 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-15:57:26,105 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:57:26,111 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-15:57:26,112 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-15:57:26,118 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-15:57:26,125 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-15:57:26,169 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-15:57:26,169 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:57:26,171 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-15:57:26,171 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-15:57:26,172 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-15:57:26,173 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-15:57:26,173 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-15:57:26,173 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 0ms 
21/04/2018-15:57:26,193 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-15:57:26,193 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:57:26,325 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-15:57:26,326 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:57:26,332 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-15:57:26,340 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-15:57:26,437 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-15:57:26,438 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:57:26,505 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-15:57:26,505 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:57:26,572 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-15:57:26,573 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-15:57:28,588 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-15:57:28,588 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-15:57:28,588 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:57:28,591 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 2ms 
21/04/2018-15:57:45,927 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-15:57:45,929 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-15:57:48,679 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-15:57:48,680 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-15:57:56,998 | WARN [class br.com.cinemafx.controllers.IngressoCtrl] : Sala não encontrada para código: 10 
21/04/2018-15:58:05,258 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-15:58:06,070 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-15:59:06,445 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-15:59:06,459 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-15:59:06,460 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-15:59:06,466 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-15:59:06,466 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-15:59:06,467 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-15:59:06,809 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-15:59:06,810 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:59:06,810 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:59:06,810 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:59:06,810 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:59:06,811 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:59:06,811 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:59:06,811 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-15:59:06,813 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-15:59:06,815 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-15:59:06,819 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-15:59:06,821 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 15:59:06 
21/04/2018-15:59:07,056 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-15:59:07,057 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:59:07,062 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-15:59:07,063 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-15:59:07,068 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-15:59:07,074 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-15:59:07,121 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-15:59:07,122 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:59:07,123 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-15:59:07,124 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-15:59:07,124 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-15:59:07,125 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-15:59:07,125 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-15:59:07,126 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-15:59:07,137 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-15:59:07,138 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-15:59:07,259 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-15:59:07,259 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:59:07,266 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-15:59:07,272 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-15:59:07,366 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-15:59:07,367 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:59:07,426 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-15:59:07,427 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-15:59:07,485 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-15:59:07,486 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-15:59:09,411 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-15:59:09,411 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-15:59:09,411 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-15:59:09,411 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:05:06,919 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-16:05:06,930 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 8ms 
21/04/2018-16:05:14,285 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:05:14,286 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 54 
21/04/2018-16:05:14,287 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 54 
21/04/2018-16:05:14,287 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:05:14,287 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:05:14,288 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:05:14,288 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:05:14,288 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:05:14,289 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:05:14,292 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:05:14,293 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:05:14,293 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:05:14 
21/04/2018-16:06:26,522 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:06:26,523 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:26,524 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:26,524 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:26,524 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:26,525 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:26,525 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:26,525 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:06:26,526 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:06:26,535 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 7ms 
21/04/2018-16:06:26,539 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:06:26,540 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:06:26 
21/04/2018-16:06:30,479 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:06:30,481 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:30,481 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:30,483 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:30,483 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:30,484 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:30,485 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:30,485 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:06:30,486 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:06:30,496 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 9ms 
21/04/2018-16:06:30,499 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:06:30,500 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:06:30 
21/04/2018-16:06:35,824 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-16:06:35,829 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 5ms 
21/04/2018-16:06:38,699 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:06:38,701 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 37 
21/04/2018-16:06:38,701 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 37 
21/04/2018-16:06:38,701 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:38,702 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:38,702 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:38,702 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:38,703 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:06:38,703 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:06:38,707 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:06:38,707 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:06:38,707 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:06:38 
21/04/2018-16:06:43,278 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:06:43,280 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:06:43,293 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:06:43,310 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 15ms 
21/04/2018-16:06:43,360 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:06:43,360 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:06:43,365 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:06:43,365 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:06:43,370 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSESSAO, CODSALA, CODFILME, CODEXIB, DATAHORA FROM TSESSOES 
21/04/2018-16:06:43,370 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:06:43,480 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:06:43,482 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 52 
21/04/2018-16:06:43,482 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 52 
21/04/2018-16:06:43,482 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:43,483 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:43,483 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:43,484 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:43,484 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:06:43,485 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:06:43,488 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:06:43,489 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:06:43,489 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:06:43 
21/04/2018-16:06:46,216 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:06:46,217 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 52 
21/04/2018-16:06:46,217 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 52 
21/04/2018-16:06:46,217 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:46,218 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:46,218 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:46,219 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:46,219 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:06:46,219 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:06:46,223 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:06:46,224 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:06:46,224 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:06:46 
21/04/2018-16:06:51,448 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:06:51,449 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:51,450 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:51,450 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:51,450 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:51,450 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:51,451 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:51,451 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:06:51,452 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:06:51,457 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:06:51,460 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:06:51,460 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:06:51 
21/04/2018-16:06:53,866 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:06:53,867 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:53,867 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:53,868 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:53,868 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:53,868 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:53,868 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:53,868 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:06:53,869 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:06:53,874 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:06:53,876 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:06:53,876 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:06:53 
21/04/2018-16:06:56,854 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:06:56,855 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:56,856 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:56,856 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:56,856 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:56,856 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:56,856 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:56,857 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:06:56,857 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:06:56,864 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:06:56,865 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:06:56,866 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:06:56 
21/04/2018-16:06:57,900 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:06:57,901 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:57,901 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:57,901 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:57,901 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:57,901 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:57,901 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:57,901 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:06:57,901 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:06:57,906 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:06:57,907 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:06:57,907 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:06:57 
21/04/2018-16:06:58,782 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:06:58,783 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:58,783 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:58,783 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:58,784 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:58,784 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:58,784 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:58,784 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:06:58,785 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:06:58,791 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:06:58,793 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:06:58,793 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:06:58 
21/04/2018-16:06:59,810 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:06:59,811 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:59,811 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:59,811 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:59,813 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:59,813 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:59,813 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:06:59,813 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:06:59,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:06:59,823 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 9ms 
21/04/2018-16:06:59,824 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:06:59,824 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:06:59 
21/04/2018-16:07:01,306 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:07:01,307 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:01,307 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:01,307 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:01,307 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:01,307 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:01,307 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:01,307 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:07:01,308 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:07:01,310 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:07:01,312 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:07:01,313 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:07:01 
21/04/2018-16:07:02,357 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:07:02,358 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:02,358 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:02,359 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:02,359 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:02,359 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:02,359 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:02,359 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:07:02,360 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:07:02,366 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:07:02,366 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:07:02,367 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:07:02 
21/04/2018-16:07:11,987 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:07:11,988 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:11,988 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:11,989 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:11,989 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:11,989 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:11,989 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:11,989 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-13 
21/04/2018-16:07:11,990 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:07:11,996 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:07:11,997 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:07:11,997 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:07:11 
21/04/2018-16:07:13,904 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:07:13,905 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:13,906 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:13,907 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:13,907 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:13,907 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:13,907 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:13,909 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-13 
21/04/2018-16:07:13,910 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:07:13,922 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 11ms 
21/04/2018-16:07:13,924 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:07:13,924 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:07:13 
21/04/2018-16:07:21,019 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:07:21,019 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:21,020 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:21,020 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:21,020 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:21,020 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:21,020 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:21,020 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-04-13 
21/04/2018-16:07:21,021 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:07:21,025 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:07:21,027 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:07:21,027 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:07:21 
21/04/2018-16:07:37,842 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:07:37,842 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:37,843 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:37,844 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:37,844 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:37,844 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:37,844 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:37,844 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-04-17 
21/04/2018-16:07:37,844 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:07:37,847 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:07:37,847 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:07:37,848 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:07:37 
21/04/2018-16:07:47,842 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:07:47,843 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:47,843 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:47,843 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:47,844 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:47,844 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:47,844 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:47,844 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-04-18 
21/04/2018-16:07:47,845 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:07:47,848 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:07:47,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:07:47,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:07:47 
21/04/2018-16:07:59,583 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:07:59,584 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:59,584 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:59,584 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:59,584 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:59,584 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:59,585 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:07:59,585 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-04-18 
21/04/2018-16:07:59,585 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:07:59,588 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:07:59,588 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:07:59,588 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:07:59 
21/04/2018-16:08:07,603 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:07,603 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:07,604 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:07,604 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:07,604 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:07,604 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:07,604 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:07,605 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:07,605 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:07,611 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:08:07,612 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:07,613 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:07 
21/04/2018-16:08:09,636 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:09,637 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:09,637 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:09,637 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:09,638 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:09,638 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:09,638 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:09,638 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:09,638 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:09,646 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 8ms 
21/04/2018-16:08:09,647 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:09,648 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:09 
21/04/2018-16:08:11,368 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:11,369 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:11,369 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:11,369 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:11,369 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:11,370 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:11,370 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:11,370 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:11,370 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:11,378 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 7ms 
21/04/2018-16:08:11,379 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:11,379 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:11 
21/04/2018-16:08:12,707 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:12,707 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:12,708 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:12,708 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:12,708 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:12,708 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:12,708 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:12,709 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:12,709 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:12,716 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 7ms 
21/04/2018-16:08:12,718 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:12,718 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:12 
21/04/2018-16:08:13,955 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:13,956 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:13,956 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:13,956 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:13,957 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:13,957 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:13,957 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:13,957 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:13,957 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:13,964 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:08:13,966 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:13,967 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:13 
21/04/2018-16:08:15,211 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:15,212 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:15,212 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:15,212 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:15,212 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:15,212 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:15,212 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:15,213 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:15,214 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:15,220 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:08:15,220 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:15,220 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:15 
21/04/2018-16:08:16,750 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:16,751 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:16,751 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:16,751 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:16,752 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:16,752 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:16,752 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:16,752 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:16,753 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:16,765 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 12ms 
21/04/2018-16:08:16,766 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:16,766 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:16 
21/04/2018-16:08:18,114 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:18,115 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:18,115 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:18,116 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:18,116 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:18,117 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:18,117 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:18,117 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:18,117 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:18,124 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 7ms 
21/04/2018-16:08:18,126 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:18,126 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:18 
21/04/2018-16:08:20,340 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:20,341 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:20,341 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:20,341 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:20,341 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:20,341 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:20,341 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:20,342 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:20,342 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:20,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:08:20,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:20,349 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:20 
21/04/2018-16:08:24,004 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:24,004 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:24,004 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:24,005 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:24,005 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:24,005 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:24,005 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:24,005 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:24,005 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:24,010 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:08:24,011 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:24,012 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:24 
21/04/2018-16:08:25,204 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:25,204 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:25,205 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:25,205 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:25,205 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:25,205 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:25,205 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:25,205 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:25,206 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:25,211 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:08:25,212 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:25,212 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:25 
21/04/2018-16:08:26,358 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:26,359 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:26,359 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:26,359 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:26,359 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:26,359 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:26,359 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:26,359 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:26,360 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:26,366 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:08:26,367 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:26,367 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:26 
21/04/2018-16:08:27,426 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:27,428 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:27,429 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:27,429 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:27,429 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:27,430 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:27,430 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:27,431 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:27,431 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:27,439 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 8ms 
21/04/2018-16:08:27,441 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:27,441 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:27 
21/04/2018-16:08:28,506 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:28,506 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,506 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,506 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,507 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,507 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,507 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,507 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:28,507 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:28,518 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 11ms 
21/04/2018-16:08:28,519 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:28,519 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:28 
21/04/2018-16:08:28,675 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:28,676 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,676 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,676 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,676 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,676 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,676 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,676 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:28,676 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:28,683 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 7ms 
21/04/2018-16:08:28,683 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:28,684 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:28 
21/04/2018-16:08:28,934 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:28,934 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,934 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,934 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,934 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,934 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,934 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:28,934 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:28,934 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:28,936 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:08:28,936 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:28,937 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:28 
21/04/2018-16:08:29,184 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:29,185 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,185 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,185 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,185 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,185 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,185 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,185 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:29,185 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:29,189 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:29,189 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:29,189 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:29 
21/04/2018-16:08:29,406 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:29,407 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,407 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,407 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,407 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,407 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,407 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,407 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:29,408 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:29,414 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:08:29,414 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:29,414 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:29 
21/04/2018-16:08:29,635 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:29,635 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,635 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,635 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,635 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,635 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,635 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,635 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:29,635 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:29,638 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:29,638 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:29,638 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:29 
21/04/2018-16:08:29,888 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:29,889 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,889 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,889 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,889 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,889 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,889 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:29,889 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:29,890 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:29,894 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:29,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:29,896 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:29 
21/04/2018-16:08:30,050 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:30,050 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,050 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,050 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,050 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,050 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,050 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,050 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:30,050 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:30,052 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:30,052 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:30,052 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:30 
21/04/2018-16:08:30,236 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:30,236 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,237 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,237 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,237 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,237 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,237 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,237 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:30,237 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:30,240 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:30,241 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:30,241 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:30 
21/04/2018-16:08:30,368 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:30,368 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,368 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,368 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,368 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,368 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,368 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,368 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:30,369 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:30,371 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:30,371 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:30,371 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:30 
21/04/2018-16:08:30,867 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:30,867 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,867 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,867 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,867 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,867 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,867 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:30,867 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:30,867 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:30,870 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:30,870 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:30,870 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:30 
21/04/2018-16:08:32,208 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:32,208 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,208 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,208 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,208 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,208 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,209 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,209 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:32,209 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:32,219 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 10ms 
21/04/2018-16:08:32,219 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:32,219 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:32 
21/04/2018-16:08:32,436 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:32,436 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,437 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,437 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,437 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,437 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,437 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,437 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:32,437 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:32,442 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:08:32,443 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:32,443 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:32 
21/04/2018-16:08:32,652 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:32,653 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,653 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,653 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,653 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,653 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,653 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,653 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:32,653 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:32,659 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:08:32,659 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:32,659 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:32 
21/04/2018-16:08:32,874 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:32,875 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,875 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,875 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,875 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,875 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,875 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:32,875 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:32,876 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:32,881 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:08:32,881 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:32,881 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:32 
21/04/2018-16:08:33,064 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:33,065 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,065 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,065 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,065 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,065 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,065 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,065 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:33,065 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:33,068 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:33,069 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:33,069 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:33 
21/04/2018-16:08:33,283 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:33,283 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,283 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,283 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,283 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,283 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,283 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,283 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:33,283 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:33,286 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:33,286 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:33,286 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:33 
21/04/2018-16:08:33,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:33,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:33,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:33,518 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:33,519 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:33,519 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:33 
21/04/2018-16:08:33,742 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:33,743 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,743 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,743 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,743 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,743 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,743 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,743 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:33,743 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:33,747 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:33,747 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:33,747 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:33 
21/04/2018-16:08:33,850 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:33,850 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,850 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,850 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,850 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,850 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,850 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:33,850 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:33,850 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:33,852 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:33,852 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:33,853 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:33 
21/04/2018-16:08:34,020 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:34,020 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,020 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,020 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,020 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,020 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,020 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,021 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:34,021 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:34,024 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:34,025 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:34,025 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:34 
21/04/2018-16:08:34,721 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:34,721 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,721 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,721 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,721 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,721 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,721 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,721 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:34,721 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:34,722 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:08:34,723 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:34,723 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:34 
21/04/2018-16:08:34,816 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:34,816 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,816 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,816 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,816 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,816 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,816 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:34,816 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:34,816 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:34,818 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:34,818 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:34,818 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:34 
21/04/2018-16:08:35,083 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:35,083 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,083 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,083 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,084 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,084 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,084 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,084 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:35,084 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:35,086 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:35,086 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:35,086 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:35 
21/04/2018-16:08:35,339 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:35,339 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,339 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,339 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,339 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,339 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,339 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,339 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:35,340 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:35,344 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:35,346 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:35,346 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:35 
21/04/2018-16:08:35,499 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:35,499 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,499 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,499 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,499 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,499 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,499 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,499 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:35,500 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:35,503 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:35,503 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:35,503 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:35 
21/04/2018-16:08:35,649 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:35,649 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,649 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,649 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,649 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,649 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,649 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,649 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:35,649 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:35,652 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:35,652 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:35,652 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:35 
21/04/2018-16:08:35,820 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:35,821 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,821 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,821 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,821 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,821 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,821 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,821 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:35,821 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:35,824 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:35,825 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:35,825 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:35 
21/04/2018-16:08:35,950 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:35,950 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,950 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,951 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,951 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,951 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,951 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:35,951 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:35,951 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:35,954 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:35,954 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:35,954 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:35 
21/04/2018-16:08:36,102 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:36,102 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,102 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,103 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,103 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,103 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,103 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,103 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:36,103 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:36,106 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:36,106 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:36,107 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:36 
21/04/2018-16:08:36,265 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:36,265 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,266 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,266 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,266 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,266 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,266 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,266 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:36,266 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:36,271 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:08:36,271 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:36,273 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:36 
21/04/2018-16:08:36,415 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:36,415 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,415 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,415 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,415 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,416 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,416 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,416 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:36,416 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:36,420 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:36,421 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:36,421 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:36 
21/04/2018-16:08:36,551 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:36,551 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,551 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,551 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,551 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,551 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,551 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,551 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:36,551 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:36,554 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:36,554 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:36,555 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:36 
21/04/2018-16:08:36,697 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:36,697 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,697 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,697 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,697 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,697 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,697 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,697 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:36,697 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:36,698 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:08:36,699 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:36,699 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:36 
21/04/2018-16:08:36,856 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:36,856 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,856 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,857 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,857 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,857 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,857 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:36,857 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:36,857 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:36,861 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:36,862 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:36,862 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:36 
21/04/2018-16:08:37,016 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:37,016 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,016 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,016 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,016 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,016 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,016 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,016 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:37,017 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:37,020 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:37,020 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:37,021 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:37 
21/04/2018-16:08:37,158 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:37,159 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,159 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,159 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,159 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,159 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,159 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,159 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:37,159 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:37,163 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:37,163 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:37,163 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:37 
21/04/2018-16:08:37,347 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:37,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:37,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:37,350 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:37,350 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:37,350 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:37 
21/04/2018-16:08:37,515 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:37,515 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:37,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:37,518 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:37,518 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:37,519 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:37 
21/04/2018-16:08:37,684 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:37,684 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,684 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,684 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,684 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,684 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,684 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,684 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:37,684 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:37,688 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:37,688 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:37,688 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:37 
21/04/2018-16:08:37,848 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:37,848 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:37,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:37,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:37,852 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:37,852 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:37,853 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:37 
21/04/2018-16:08:38,005 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:38,005 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,005 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,005 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,005 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,005 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,005 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,005 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:38,005 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:38,012 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:08:38,012 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:38,012 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:38 
21/04/2018-16:08:38,181 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:38,182 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,182 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,182 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,182 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,182 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,182 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,182 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:38,182 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:38,184 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:38,184 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:38,184 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:38 
21/04/2018-16:08:38,331 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:38,331 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,331 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,331 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,331 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,331 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,331 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,331 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:38,332 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:38,334 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:38,334 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:38,334 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:38 
21/04/2018-16:08:38,502 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:38,502 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,502 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,502 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,502 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,502 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,502 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,502 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:38,502 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:38,508 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:08:38,509 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:38,509 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:38 
21/04/2018-16:08:38,664 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:38,664 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,664 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,664 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,664 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,664 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,664 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,664 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:38,665 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:38,667 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:38,668 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:38,668 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:38 
21/04/2018-16:08:38,817 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:38,817 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,817 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,817 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,817 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,817 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,817 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,817 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:38,817 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:38,822 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:08:38,822 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:38,822 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:38 
21/04/2018-16:08:38,982 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:38,982 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,983 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,983 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,983 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,983 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,983 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:38,983 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:38,983 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:38,991 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 8ms 
21/04/2018-16:08:38,991 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:38,991 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:38 
21/04/2018-16:08:39,145 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:39,146 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,146 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,146 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,146 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,146 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,146 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,146 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:39,146 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:39,152 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:08:39,152 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:39,152 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:39 
21/04/2018-16:08:39,702 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:39,702 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,702 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,702 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,702 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,702 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,702 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,702 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:39,702 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:39,706 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:39,706 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:39,706 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:39 
21/04/2018-16:08:39,724 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:39,724 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,724 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,724 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,724 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,724 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,724 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,724 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:39,724 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:39,726 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:39,727 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:39,727 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:39 
21/04/2018-16:08:39,734 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:39,734 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,734 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,734 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,734 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,734 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,734 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,734 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:39,734 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:39,736 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:39,737 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:39,737 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:39 
21/04/2018-16:08:39,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:39,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,896 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:39,896 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:39,896 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:39,898 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:39,898 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:39,898 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:39 
21/04/2018-16:08:40,346 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:40,347 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,347 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,347 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,347 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,347 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,347 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,347 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:40,347 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:40,349 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:40,349 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:40,349 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:40 
21/04/2018-16:08:40,571 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:40,571 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,571 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,571 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,571 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,571 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,571 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,571 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:40,571 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:40,573 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:40,574 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:40,574 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:40 
21/04/2018-16:08:40,916 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:40,916 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,916 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,916 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,916 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,916 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,916 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:40,916 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:40,916 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:40,919 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:40,919 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:40,919 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:40 
21/04/2018-16:08:41,080 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:41,080 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,080 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,080 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,080 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,080 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,080 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,080 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:41,081 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:41,086 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:08:41,087 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:41,087 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:41 
21/04/2018-16:08:41,284 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:41,284 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,284 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,284 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,284 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,284 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,285 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,285 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:41,285 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:41,289 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:41,290 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:41,290 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:41 
21/04/2018-16:08:41,478 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:41,478 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,478 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,478 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,478 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,478 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,478 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,478 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:41,479 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:41,482 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:41,482 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:41,482 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:41 
21/04/2018-16:08:41,686 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:41,686 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,686 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,686 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,686 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,686 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,686 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,686 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:41,686 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:41,689 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:41,689 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:41,689 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:41 
21/04/2018-16:08:41,862 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:41,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:41,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:41,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:41,867 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:41,867 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:41,867 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:41 
21/04/2018-16:08:42,033 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:42,033 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,033 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,033 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,033 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,033 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,033 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,033 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:42,034 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:42,037 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:42,037 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:42,037 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:42 
21/04/2018-16:08:42,217 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:42,218 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,218 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,218 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,218 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,218 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,218 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,218 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:42,218 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:42,221 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:42,221 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:42,221 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:42 
21/04/2018-16:08:42,421 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:42,421 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,421 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,421 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,421 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,421 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,421 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,421 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:42,421 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:42,426 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:08:42,426 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:42,426 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:42 
21/04/2018-16:08:42,617 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:42,617 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,617 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,617 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,617 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,617 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,617 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,617 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:42,617 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:42,620 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:42,620 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:42,620 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:42 
21/04/2018-16:08:42,802 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:42,802 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,802 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,802 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,802 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,802 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,802 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,802 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:42,802 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:42,805 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:42,805 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:42,805 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:42 
21/04/2018-16:08:42,949 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:42,949 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,949 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,949 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,949 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,949 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,949 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:42,949 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:42,949 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:42,951 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:08:42,952 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:42,952 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:42 
21/04/2018-16:08:43,130 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:43,130 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,130 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,130 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,130 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,130 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,130 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,130 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:43,131 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:43,133 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:43,134 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:43,134 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:43 
21/04/2018-16:08:43,316 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:43,316 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,316 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,317 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,317 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,317 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,317 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,317 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:43,317 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:43,321 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:43,321 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:43,321 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:43 
21/04/2018-16:08:43,483 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:43,483 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,483 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,483 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,483 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,483 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,483 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,483 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:43,483 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:43,487 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:43,487 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:43,487 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:43 
21/04/2018-16:08:43,652 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:43,653 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,653 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,653 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,653 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,653 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,653 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,653 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:43,653 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:43,654 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:08:43,654 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:43,654 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:43 
21/04/2018-16:08:43,848 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:43,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:43,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:43,849 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:43,850 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:08:43,850 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:43,851 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:43 
21/04/2018-16:08:44,047 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:44,047 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,047 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,047 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,047 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,047 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,047 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,047 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:44,047 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:44,049 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:44,049 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:44,049 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:44 
21/04/2018-16:08:44,199 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:44,199 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,199 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,199 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,199 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,199 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,199 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,199 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:44,199 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:44,203 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:44,204 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:44,204 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:44 
21/04/2018-16:08:44,379 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:44,379 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,379 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,379 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,379 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,379 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,380 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,380 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:44,380 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:44,384 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:44,384 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:44,384 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:44 
21/04/2018-16:08:44,548 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:44,548 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,548 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,548 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,548 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,548 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,548 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,548 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:44,548 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:44,551 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:44,551 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:44,551 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:44 
21/04/2018-16:08:44,716 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:44,717 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,717 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,717 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,717 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,717 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,717 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,717 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:44,717 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:44,720 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:44,721 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:44,721 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:44 
21/04/2018-16:08:44,919 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:44,919 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,919 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,919 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,919 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,919 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,919 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:44,919 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:44,919 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:44,926 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:08:44,926 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:44,926 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:44 
21/04/2018-16:08:45,110 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:45,111 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,111 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,111 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,111 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,111 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,111 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,111 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:45,111 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:45,113 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:45,114 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:45,114 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:45 
21/04/2018-16:08:45,285 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:45,286 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,286 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,286 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,286 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,286 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,286 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,286 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:45,286 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:45,288 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:45,288 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:45,288 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:45 
21/04/2018-16:08:45,469 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:45,469 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,469 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,469 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,470 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,470 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,470 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,470 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:45,470 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:45,473 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:45,473 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:45,473 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:45 
21/04/2018-16:08:45,619 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:45,619 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,619 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,619 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,619 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,619 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,619 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,619 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:45,620 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:45,623 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:45,623 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:45,623 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:45 
21/04/2018-16:08:45,782 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:45,783 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,783 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,783 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,783 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,783 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,783 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,783 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:45,783 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:45,788 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:08:45,788 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:45,788 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:45 
21/04/2018-16:08:45,932 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:45,932 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,932 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,932 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,932 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,932 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,932 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:45,932 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:45,932 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:45,934 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:45,934 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:45,935 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:45 
21/04/2018-16:08:46,123 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:46,123 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,123 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,123 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,124 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,124 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,124 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,124 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:46,124 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:46,129 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:08:46,129 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:46,130 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:46 
21/04/2018-16:08:46,279 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:46,280 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,280 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,280 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,280 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,280 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,280 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,280 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:46,280 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:46,283 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:46,283 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:46,283 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:46 
21/04/2018-16:08:46,463 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:46,463 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,463 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,463 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,463 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,464 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,464 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,464 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:46,464 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:46,466 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:46,466 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:46,466 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:46 
21/04/2018-16:08:46,647 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:46,647 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,647 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,647 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,647 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,647 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,647 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,647 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:46,647 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:46,650 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:46,650 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:46,650 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:46 
21/04/2018-16:08:46,820 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:46,820 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,820 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,820 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,820 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,820 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,820 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,820 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:46,821 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:46,827 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:08:46,827 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:46,828 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:46 
21/04/2018-16:08:46,999 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:46,999 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,999 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,999 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,999 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,999 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,999 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:46,999 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:46,999 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:47,003 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:47,003 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:47,003 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:47 
21/04/2018-16:08:47,190 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:47,190 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,190 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,190 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,190 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,190 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,190 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,191 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:47,191 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:47,195 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:47,196 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:47,196 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:47 
21/04/2018-16:08:47,368 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:47,369 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,369 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,369 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,369 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,369 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,369 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,369 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:47,369 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:47,372 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:47,372 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:47,372 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:47 
21/04/2018-16:08:47,563 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:47,563 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,563 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,563 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,563 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,563 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,563 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,563 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:47,563 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:47,567 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:47,567 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:47,568 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:47 
21/04/2018-16:08:47,813 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:47,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:47,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:47,816 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:47,816 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:47,817 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:47 
21/04/2018-16:08:47,987 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:47,987 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,987 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,987 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,987 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,987 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,987 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:47,987 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:47,987 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:47,992 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:08:47,992 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:47,992 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:47 
21/04/2018-16:08:48,187 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:48,187 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,187 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,187 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,187 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,187 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,187 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,187 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:48,187 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:48,191 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:48,191 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:48,191 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:48 
21/04/2018-16:08:48,396 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:48,396 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,396 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,396 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,396 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,396 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,396 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,396 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:48,396 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:48,398 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:48,398 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:48,398 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:48 
21/04/2018-16:08:48,612 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:48,612 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,612 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,612 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,612 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,612 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,612 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,612 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:48,613 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:48,616 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:48,616 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:48,616 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:48 
21/04/2018-16:08:48,807 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:48,807 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,807 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,807 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,807 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,807 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,807 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:48,807 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:48,808 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:48,813 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:08:48,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:48,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:48 
21/04/2018-16:08:49,100 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:49,100 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,100 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,100 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,100 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,100 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,100 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,100 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:49,101 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:49,105 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:49,106 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:49,106 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:49 
21/04/2018-16:08:49,264 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:49,264 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,264 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,264 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,264 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,264 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,264 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,264 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:49,264 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:49,266 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:49,267 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:49,267 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:49 
21/04/2018-16:08:49,450 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:49,451 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,451 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,451 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,451 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,451 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,451 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,451 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:49,451 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:49,456 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:08:49,457 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:49,457 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:49 
21/04/2018-16:08:49,632 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:49,633 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,633 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,633 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,633 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,633 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,633 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,633 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:49,633 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:49,635 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:49,635 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:49,635 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:49 
21/04/2018-16:08:49,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:49,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:49,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:49,815 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:49,816 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:08:49,817 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:49,817 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:49 
21/04/2018-16:08:50,008 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:50,008 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,008 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,008 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,009 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,009 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,009 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,009 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:50,009 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:50,012 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:50,012 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:50,012 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:50 
21/04/2018-16:08:50,176 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:50,177 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,177 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,177 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,177 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,177 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,177 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,177 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:50,177 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:50,179 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:50,179 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:50,179 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:50 
21/04/2018-16:08:50,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:50,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:50,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:50,356 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 7ms 
21/04/2018-16:08:50,356 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:50,357 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:50 
21/04/2018-16:08:50,512 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:50,513 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,513 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,513 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,513 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,513 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,513 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,513 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:50,513 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:50,515 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:50,515 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:50,515 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:50 
21/04/2018-16:08:50,680 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:50,680 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,680 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,680 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,680 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,680 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,680 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,680 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:50,680 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:50,682 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:50,682 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:50,682 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:50 
21/04/2018-16:08:50,846 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:50,847 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,847 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,847 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,847 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,847 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,847 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:50,847 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:50,847 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:50,850 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:50,850 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:50,850 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:50 
21/04/2018-16:08:51,018 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:51,019 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,019 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,019 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,019 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,019 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,019 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,019 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:51,019 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:51,023 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:51,024 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:51,024 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:51 
21/04/2018-16:08:51,181 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:51,181 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,181 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,181 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,181 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,181 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,181 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,181 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:51,181 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:51,184 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:51,184 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:51,184 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:51 
21/04/2018-16:08:51,362 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:51,362 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,363 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,363 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,363 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,363 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,363 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,363 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:51,363 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:51,368 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:51,368 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:51,368 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:51 
21/04/2018-16:08:51,567 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:51,567 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,567 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,568 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,568 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,568 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,568 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,568 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:51,568 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:51,571 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:08:51,571 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:51,571 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:51 
21/04/2018-16:08:51,736 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:51,736 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,737 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,737 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,737 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,737 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,737 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,737 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:51,737 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:51,738 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:08:51,738 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:51,738 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:51 
21/04/2018-16:08:51,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:51,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:51,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:51,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:51,900 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:08:51,900 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:51,900 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:51 
21/04/2018-16:08:52,070 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:52,070 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,070 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,070 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,070 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,070 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,070 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,070 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:52,070 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:52,073 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:52,073 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:52,074 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:52 
21/04/2018-16:08:52,228 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:52,228 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,228 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,228 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,228 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,228 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,228 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,228 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:52,229 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:52,231 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:08:52,231 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:52,231 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:52 
21/04/2018-16:08:52,441 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY CODFILME  
21/04/2018-16:08:52,442 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,442 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,442 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,442 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,442 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,442 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:08:52,442 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-01-18 
21/04/2018-16:08:52,442 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:08:52,446 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:08:52,447 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:08:52,447 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:08:52 
21/04/2018-16:10:37,115 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-16:10:37,659 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-16:11:03,231 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-16:11:03,247 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:11:03,247 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:11:03,251 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-16:11:03,252 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:11:03,252 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:11:03,598 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY DATAHORA  
21/04/2018-16:11:03,598 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:11:03,599 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:11:03,599 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:11:03,599 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:11:03,599 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:11:03,599 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:11:03,600 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:11:03,602 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:11:03,604 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:11:03,608 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:11:03,610 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:11:03 
21/04/2018-16:11:03,843 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:11:03,844 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:11:03,849 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:11:03,849 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:11:03,854 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:11:03,860 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 4ms 
21/04/2018-16:11:03,902 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:11:03,903 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:11:03,904 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-16:11:03,905 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-16:11:03,905 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:11:03,905 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-16:11:03,906 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-16:11:03,907 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:11:03,918 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:11:03,919 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:11:04,055 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:11:04,056 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:11:04,062 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:11:04,068 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-16:11:04,175 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:11:04,175 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:11:04,242 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:11:04,243 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:11:04,308 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-16:11:04,309 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:11:06,309 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-16:11:06,310 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-16:11:06,310 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:11:06,311 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:11:10,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X
   ORDER BY DATAHORA  
21/04/2018-16:11:10,536 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:11:10,536 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:11:10,537 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:11:10,537 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:11:10,537 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:11:10,537 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:11:10,537 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:11:10,537 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:11:10,540 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:11:10,542 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:11:10,542 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:11:10 
21/04/2018-16:12:50,722 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-16:12:51,135 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-16:12:53,037 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-16:12:53,418 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-16:20:45,549 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-16:20:45,564 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:20:45,565 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:20:45,569 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-16:20:45,569 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:20:45,570 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:20:45,910 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:20:45,911 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:20:45,911 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:20:45,911 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:20:45,911 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:20:45,911 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:20:45,912 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:20:45,912 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:20:45,914 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:20:45,917 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:20:45,921 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:20:45,923 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:20:45 
21/04/2018-16:20:46,159 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:20:46,159 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:20:46,165 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:20:46,165 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:20:46,170 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:20:46,178 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-16:20:46,214 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:20:46,220 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:20:46,221 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-16:20:46,222 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-16:20:46,222 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:20:46,222 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-16:20:46,222 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-16:20:46,223 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:20:46,234 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:20:46,234 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:20:46,337 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:20:46,337 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:20:46,343 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:20:46,348 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 5ms 
21/04/2018-16:20:46,425 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:20:46,426 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:20:46,488 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:20:46,489 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:20:46,551 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-16:20:46,552 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:20:48,592 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-16:20:48,592 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-16:20:48,593 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:20:48,593 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:25:31,383 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:25:31,385 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:31,385 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:31,385 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:31,386 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:31,386 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:31,386 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:31,387 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:25:31,388 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:25:31,393 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:25:31,397 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:25:31,398 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:25:31 
21/04/2018-16:25:32,601 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:25:32,933 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:32,933 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:32,933 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:32,934 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:32,934 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:32,935 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:32,935 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:25:32,936 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:25:32,946 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 9ms 
21/04/2018-16:25:32,952 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:25:32,953 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:25:32 
21/04/2018-16:25:39,981 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:25:39,983 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:39,983 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:39,984 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:39,984 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:39,984 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:39,984 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:39,985 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-04-15 
21/04/2018-16:25:39,986 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:25:39,990 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:25:39,992 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:25:39,993 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:25:39 
21/04/2018-16:25:42,802 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:25:42,802 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:42,803 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:42,803 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:42,803 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:42,803 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:42,803 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:42,804 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-04-15 
21/04/2018-16:25:42,804 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:25:42,808 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:25:42,811 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:25:42,811 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:25:42 
21/04/2018-16:25:44,446 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:25:44,448 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:44,448 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:44,449 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:44,449 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:44,450 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:44,450 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:25:44,451 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-04-15 
21/04/2018-16:25:44,451 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:25:44,456 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:25:44,459 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:25:44,460 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:25:44 
21/04/2018-16:26:20,664 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:26:20,666 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:26:20,666 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:26:20,667 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:26:20,667 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:26:20,667 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:26:20,667 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:26:20,668 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-04-17 
21/04/2018-16:26:20,669 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:26:20,674 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:26:20,676 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:26:20,677 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:26:20 
21/04/2018-16:28:38,794 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:28:38,796 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:28:41,695 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:28:41,697 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-16:30:33,511 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-16:30:33,748 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-16:31:06,999 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-16:31:07,015 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:31:07,016 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:31:07,020 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-16:31:07,020 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:31:07,021 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:31:07,355 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:31:07,356 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:31:07,356 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:31:07,356 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:31:07,356 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:31:07,357 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:31:07,357 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:31:07,357 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:31:07,359 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:31:07,362 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:31:07,366 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:31:07,368 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:31:07 
21/04/2018-16:31:07,621 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:31:07,622 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:31:07,628 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:31:07,629 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:31:07,637 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:31:07,644 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-16:31:07,690 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:31:07,691 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:31:07,692 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-16:31:07,693 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-16:31:07,693 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:31:07,694 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-16:31:07,694 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-16:31:07,695 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:31:07,707 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:31:07,707 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:31:07,855 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:31:07,856 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:31:07,862 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:31:07,870 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-16:31:07,975 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:31:07,976 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:31:08,050 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:31:08,051 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:31:08,116 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-16:31:08,117 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:31:10,193 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-16:31:10,193 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-16:31:10,193 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:31:10,194 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:31:11,382 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:31:11,384 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:31:14,559 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:31:14,561 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:31:16,819 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:31:16,821 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-16:31:20,998 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:31:20,999 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:31:26,180 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:31:26,181 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-16:31:31,203 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-16:31:31,528 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-16:33:45,492 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-16:33:45,510 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:33:45,511 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:33:45,516 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-16:33:45,516 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:33:45,517 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:33:45,862 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:33:45,862 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:33:45,862 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:33:45,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:33:45,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:33:45,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:33:45,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:33:45,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:33:45,865 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:33:45,869 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:33:45,872 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:33:45,874 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:33:45 
21/04/2018-16:33:46,105 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:33:46,106 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:33:46,111 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:33:46,112 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:33:46,117 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:33:46,125 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-16:33:46,159 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:33:46,160 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:33:46,162 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-16:33:46,162 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-16:33:46,163 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:33:46,163 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-16:33:46,163 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-16:33:46,164 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:33:46,189 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:33:46,189 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:33:46,313 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:33:46,314 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:33:46,320 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:33:46,327 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-16:33:46,420 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:33:46,421 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:33:46,490 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:33:46,491 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:33:46,553 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-16:33:46,554 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:33:48,523 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-16:33:48,524 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-16:33:48,524 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:33:48,525 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:33:54,400 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-16:33:54,764 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-16:39:35,838 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-16:39:35,853 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:39:35,854 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:39:35,859 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-16:39:35,859 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:39:35,860 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:39:35,969 | WARN [class br.com.cinemafx.controllers.LoginCtrl] : Senha informada está incorreta 
21/04/2018-16:39:37,393 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-16:39:37,394 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:39:37,394 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:39:37,399 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-16:39:37,399 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:39:37,400 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:39:37,643 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:39:37,643 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:39:37,643 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:39:37,644 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:39:37,644 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:39:37,644 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:39:37,644 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:39:37,644 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:39:37,646 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:39:37,649 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:39:37,652 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:39:37,654 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:39:37 
21/04/2018-16:39:37,894 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:39:37,895 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:39:37,901 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:39:37,902 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:39:37,907 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:39:37,924 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 17ms 
21/04/2018-16:39:37,980 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:39:37,981 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:39:37,983 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-16:39:37,983 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-16:39:37,983 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:39:37,983 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-16:39:37,983 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-16:39:37,985 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:39:37,996 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:39:37,996 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:39:38,111 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:39:38,112 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:39:38,117 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:39:38,123 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 5ms 
21/04/2018-16:39:38,211 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:39:38,212 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:39:38,272 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:39:38,272 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:39:38,352 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-16:39:38,353 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:39:40,292 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-16:39:40,292 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-16:39:40,292 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:39:40,293 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:39:41,969 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:39:41,970 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:39:44,437 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:39:44,438 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:40:43,525 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-16:40:43,907 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-16:43:39,974 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-16:43:39,991 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:43:39,992 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:43:39,997 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-16:43:39,998 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:43:39,999 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:43:40,337 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:43:40,338 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:43:40,338 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:43:40,338 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:43:40,338 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:43:40,339 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:43:40,339 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:43:40,339 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:43:40,341 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:43:40,344 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:43:40,348 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:43:40,349 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:43:40 
21/04/2018-16:43:40,572 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:43:40,574 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 2ms 
21/04/2018-16:43:40,579 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:43:40,580 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:43:40,586 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:43:40,593 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-16:43:40,643 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:43:40,644 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:43:40,645 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-16:43:40,646 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-16:43:40,646 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:43:40,646 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-16:43:40,647 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-16:43:40,648 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:43:40,666 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:43:40,667 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:43:40,797 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:43:40,798 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:43:40,803 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:43:40,810 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-16:43:40,921 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:43:40,921 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:43:40,996 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:43:40,996 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:43:41,067 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-16:43:41,068 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:43:43,323 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-16:43:43,324 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-16:43:43,324 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:43:43,326 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:43:48,161 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:43:48,164 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:43:48,213 | ERROR [class br.com.cinemafx.methods.KeySearchStage] : Erro ao tentar criar tabela de pesquisa
null 
21/04/2018-16:44:46,250 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-16:44:46,594 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-16:44:55,772 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-16:44:55,787 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:44:55,788 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:44:55,793 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-16:44:55,793 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:44:55,794 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:44:56,147 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:44:56,147 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:44:56,147 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:44:56,148 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:44:56,148 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:44:56,149 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:44:56,149 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:44:56,149 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:44:56,151 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:44:56,153 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:44:56,157 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:44:56,160 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:44:56 
21/04/2018-16:44:56,387 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:44:56,388 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:44:56,394 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:44:56,394 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:44:56,400 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:44:56,406 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-16:44:56,448 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:44:56,448 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:44:56,449 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-16:44:56,450 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-16:44:56,450 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:44:56,450 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-16:44:56,451 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-16:44:56,452 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:44:56,467 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:44:56,467 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:44:56,587 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:44:56,587 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:44:56,593 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:44:56,602 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-16:44:56,702 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:44:56,704 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:44:56,776 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:44:56,777 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:44:56,846 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-16:44:56,847 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:44:58,898 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-16:44:58,899 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-16:44:58,899 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:44:58,900 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:45:01,711 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:45:01,713 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:45:01,759 | ERROR [class br.com.cinemafx.methods.KeySearchStage] : Erro ao tentar criar tabela de pesquisa
null 
java.lang.ArrayStoreException
	at java.lang.System.arraycopy(Native Method)
	at java.util.ArrayList.toArray(ArrayList.java:412)
	at br.com.cinemafx.methods.KeySearchStage.reloadTableValue(KeySearchStage.java:138)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:113)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$5(KeySearchStage.java:109)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-16:45:45,464 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-16:45:45,802 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-16:45:54,818 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-16:45:54,838 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:45:54,839 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:45:54,844 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-16:45:54,844 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:45:54,845 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:45:55,224 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:45:55,225 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:45:55,225 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:45:55,226 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:45:55,227 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:45:55,227 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:45:55,227 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:45:55,227 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:45:55,230 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:45:55,233 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:45:55,237 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:45:55,239 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:45:55 
21/04/2018-16:45:55,489 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:45:55,490 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:45:55,495 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:45:55,496 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:45:55,501 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:45:55,507 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-16:45:55,549 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:45:55,550 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:45:55,551 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-16:45:55,552 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-16:45:55,552 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:45:55,553 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-16:45:55,553 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-16:45:55,554 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:45:55,571 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:45:55,572 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:45:55,693 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:45:55,694 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:45:55,700 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:45:55,706 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-16:45:55,803 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:45:55,804 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:45:55,877 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:45:55,878 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:45:55,945 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-16:45:55,946 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:45:58,119 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-16:45:58,119 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-16:45:58,120 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:45:58,120 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:46:00,201 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-16:46:00,203 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:46:00,225 | ERROR [class br.com.cinemafx.methods.KeySearchStage] : Erro ao tentar criar tabela de pesquisa
null 
java.lang.ArrayStoreException
	at java.lang.System.arraycopy(Native Method)
	at java.util.ArrayList.toArray(ArrayList.java:412)
	at br.com.cinemafx.methods.KeySearchStage.reloadTableValue(KeySearchStage.java:138)
	at br.com.cinemafx.methods.KeySearchStage.showSearch(KeySearchStage.java:113)
	at br.com.cinemafx.methods.KeySearchStage.lambda$appCalls$5(KeySearchStage.java:109)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-16:46:50,455 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-16:46:50,470 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:46:50,471 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:46:50,476 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-16:46:50,477 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:46:50,477 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:46:50,807 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:46:50,807 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:46:50,808 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:46:50,808 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:46:50,808 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:46:50,808 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:46:50,809 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:46:50,809 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:46:50,811 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:46:50,813 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:46:50,818 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:46:50,821 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:46:50 
21/04/2018-16:46:51,056 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:46:51,057 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:46:51,063 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:46:51,064 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:46:51,070 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:46:51,076 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-16:46:51,119 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:46:51,119 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:46:51,120 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-16:46:51,120 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-16:46:51,120 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:46:51,122 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-16:46:51,122 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-16:46:51,122 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:46:51,138 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:46:51,138 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:46:51,250 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:46:51,251 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:46:51,257 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:46:51,265 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-16:46:51,361 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:46:51,362 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:46:51,433 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:46:51,434 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:46:51,501 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-16:46:51,503 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:46:53,608 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-16:46:53,608 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-16:46:53,608 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:46:53,609 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:46:54,550 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-16:46:54,554 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 3ms 
21/04/2018-16:47:00,553 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-16:47:00,961 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-16:47:03,216 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-16:47:03,642 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-16:47:31,540 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-16:47:31,558 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:47:31,559 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:47:31,565 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-16:47:31,565 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:47:31,566 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:47:31,903 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:47:31,903 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:47:31,903 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:47:31,904 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:47:31,904 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:47:31,904 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:47:31,904 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:47:31,904 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:47:31,906 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:47:31,910 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:47:31,914 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:47:31,916 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:47:31 
21/04/2018-16:47:32,146 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:47:32,147 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:47:32,153 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:47:32,154 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:47:32,160 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:47:32,168 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-16:47:32,213 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:47:32,213 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:47:32,215 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-16:47:32,215 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-16:47:32,215 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:47:32,215 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-16:47:32,215 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-16:47:32,216 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:47:32,237 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:47:32,238 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:47:32,366 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:47:32,367 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:47:32,374 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:47:32,382 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-16:47:32,478 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:47:32,478 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:47:32,537 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:47:32,538 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:47:32,598 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-16:47:32,600 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:47:34,778 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-16:47:34,779 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-16:47:34,779 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:47:34,780 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:47:35,747 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-16:47:35,750 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-16:48:04,889 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-16:48:04,910 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:48:04,911 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:48:04,915 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-16:48:04,915 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:48:04,916 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:48:05,231 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:48:05,231 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:48:05,231 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:48:05,232 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:48:05,232 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:48:05,232 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:48:05,232 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:48:05,232 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:48:05,236 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:48:05,239 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:48:05,242 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:48:05,244 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:48:05 
21/04/2018-16:48:05,484 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:48:05,486 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:48:05,492 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:48:05,492 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:48:05,498 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:48:05,506 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-16:48:05,555 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:48:05,556 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:48:05,557 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-16:48:05,558 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-16:48:05,558 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:48:05,558 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-16:48:05,558 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-16:48:05,559 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:48:05,581 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:48:05,582 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:48:05,709 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:48:05,710 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:48:05,716 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:48:05,722 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-16:48:05,817 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:48:05,817 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:48:05,882 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:48:05,882 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:48:05,955 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-16:48:05,956 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:48:08,041 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-16:48:08,041 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-16:48:08,041 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:48:08,042 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:48:09,311 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-16:48:09,316 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 3ms 
21/04/2018-16:48:13,509 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-16:48:13,970 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-16:48:16,134 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-16:48:16,556 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-16:50:34,924 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-16:50:34,938 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:50:34,939 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:50:34,943 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-16:50:34,944 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:50:34,944 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:50:35,273 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:50:35,274 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:50:35,274 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:50:35,274 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:50:35,274 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:50:35,274 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:50:35,274 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:50:35,274 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:50:35,277 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:50:35,281 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:50:35,284 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:50:35,286 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:50:35 
21/04/2018-16:50:35,529 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:50:35,530 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:50:35,535 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:50:35,536 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:50:35,542 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:50:35,550 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-16:50:35,601 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:50:35,601 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:50:35,603 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-16:50:35,603 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-16:50:35,603 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:50:35,603 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-16:50:35,604 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-16:50:35,605 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:50:35,614 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:50:35,616 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 2ms 
21/04/2018-16:50:35,723 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:50:35,724 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:50:35,729 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:50:35,734 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 5ms 
21/04/2018-16:50:35,821 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:50:35,821 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:50:35,888 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:50:35,889 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:50:35,949 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-16:50:35,949 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:50:38,201 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-16:50:38,201 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-16:50:38,201 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:50:38,202 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:50:39,902 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-16:50:39,907 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 4ms 
21/04/2018-16:50:46,006 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:50:46,007 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:50:48,742 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:50:48,743 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-16:51:27,430 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-16:51:27,803 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-16:51:51,592 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-16:51:51,607 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:51:51,608 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-16:51:51,613 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-16:51:51,613 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:51:51,614 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:51:51,959 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:51:51,959 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:51:51,959 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:51:51,959 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:51:51,959 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:51:51,959 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:51:51,959 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:51:51,960 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:51:51,961 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:51:51,964 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-16:51:51,968 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:51:51,970 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:51:51 
21/04/2018-16:51:52,191 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:51:52,192 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:51:52,197 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:51:52,198 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:51:52,204 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:51:52,210 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-16:51:52,244 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:51:52,245 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:51:52,247 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-16:51:52,247 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-16:51:52,247 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:51:52,248 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-16:51:52,248 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-16:51:52,249 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:51:52,258 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:51:52,258 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:51:52,379 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:51:52,379 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:51:52,384 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:51:52,389 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 5ms 
21/04/2018-16:51:52,484 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:51:52,484 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:51:52,551 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:51:52,552 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:51:52,613 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-16:51:52,614 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:51:54,663 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-16:51:54,664 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-16:51:54,664 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:51:54,665 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:51:56,413 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-16:51:56,417 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 3ms 
21/04/2018-16:52:10,854 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:52:10,855 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:52:13,300 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:52:13,303 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-16:52:16,834 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:52:16,836 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:16,836 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:16,837 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:16,837 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:16,839 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 3 
21/04/2018-16:52:16,839 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 3 
21/04/2018-16:52:16,839 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:52:16,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:52:16,843 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:52:16,843 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:52:16,844 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:52:16 
21/04/2018-16:52:20,555 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:52:20,557 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:52:24,021 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:52:24,022 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:24,022 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:24,023 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:24,023 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:24,024 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 1 
21/04/2018-16:52:24,024 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 1 
21/04/2018-16:52:24,024 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:52:24,025 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:52:24,029 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:52:24,030 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:52:24,030 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:52:24 
21/04/2018-16:52:31,258 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:52:31,259 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:31,260 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:31,260 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:31,260 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:31,261 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:31,261 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:31,262 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:52:31,262 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:52:31,271 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 7ms 
21/04/2018-16:52:31,273 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:52:31,273 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:52:31 
21/04/2018-16:52:34,850 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:52:34,851 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:34,852 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:34,852 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:34,852 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:34,853 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:34,853 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:34,854 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:52:34,854 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:52:34,860 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:52:34,864 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:52:34,864 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:52:34 
21/04/2018-16:52:38,326 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:52:38,327 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:52:43,075 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:52:43,076 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:43,076 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:43,076 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:43,077 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:52:43,077 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 4 
21/04/2018-16:52:43,077 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 4 
21/04/2018-16:52:43,077 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:52:43,078 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:52:43,081 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:52:43,082 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:52:43,082 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:52:43 
21/04/2018-16:52:48,228 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-16:52:48,540 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-16:53:42,527 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-16:53:42,542 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:53:42,543 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:53:42,548 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-16:53:42,548 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-16:53:42,550 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:53:42,881 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:53:42,882 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:42,882 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:42,882 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:42,882 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:42,883 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:42,883 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:42,883 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:53:42,886 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:53:42,889 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:53:42,893 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:53:42,895 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:53:42 
21/04/2018-16:53:43,124 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:53:43,125 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:53:43,131 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:53:43,132 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:53:43,138 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:53:43,143 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 5ms 
21/04/2018-16:53:43,178 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:53:43,179 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:53:43,180 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-16:53:43,181 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-16:53:43,181 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:53:43,182 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-16:53:43,182 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-16:53:43,183 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:53:43,199 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:53:43,200 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:53:43,316 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-16:53:43,317 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:53:43,324 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-16:53:43,332 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-16:53:43,419 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:53:43,420 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-16:53:43,489 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:53:43,490 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:53:43,553 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-16:53:43,554 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-16:53:45,586 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-16:53:45,587 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-16:53:45,587 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:45,588 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-16:53:48,151 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:53:48,153 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:53:51,094 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:53:51,095 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:51,095 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:51,096 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:51,096 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:51,096 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:51,097 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:51,097 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:53:51,098 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:53:51,108 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 9ms 
21/04/2018-16:53:51,114 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:53:51,115 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:53:51 
21/04/2018-16:53:54,297 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:53:54,299 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:53:56,767 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:53:56,769 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:56,769 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:56,770 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:56,770 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:53:56,770 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 4 
21/04/2018-16:53:56,771 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 4 
21/04/2018-16:53:56,771 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:53:56,772 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:53:56,777 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-16:53:56,778 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:53:56,779 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:53:56 
21/04/2018-16:53:59,946 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-16:53:59,947 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:54:06,432 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:54:06,432 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:54:06,432 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:54:06,433 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:54:06,433 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:54:06,433 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 8 
21/04/2018-16:54:06,433 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 8 
21/04/2018-16:54:06,433 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:54:06,435 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:54:06,441 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 6ms 
21/04/2018-16:54:06,442 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:54:06,443 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:54:06 
21/04/2018-16:54:08,303 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:54:08,305 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:54:08,305 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:54:08,306 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:54:08,306 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:54:08,306 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 8 
21/04/2018-16:54:08,307 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 8 
21/04/2018-16:54:08,307 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:54:08,308 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:54:08,313 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:54:08,316 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:54:08,317 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:54:08 
21/04/2018-16:54:19,710 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-16:54:19,711 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-16:54:24,072 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:54:24,073 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:54:24,073 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:54:24,073 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 1 
21/04/2018-16:54:24,073 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 1 
21/04/2018-16:54:24,074 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 8 
21/04/2018-16:54:24,074 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 8 
21/04/2018-16:54:24,074 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:54:24,075 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:54:24,080 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:54:24,082 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:54:24,082 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:54:24 
21/04/2018-16:54:33,715 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:54:33,716 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:54:33,716 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:54:33,716 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 1 
21/04/2018-16:54:33,717 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 1 
21/04/2018-16:54:33,718 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 8 
21/04/2018-16:54:33,718 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 8 
21/04/2018-16:54:33,718 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:54:33,718 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:54:33,723 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-16:54:33,725 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:54:33,725 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:54:33 
21/04/2018-16:54:40,617 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:54:40,618 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:54:40,618 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-16:54:40,618 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 1 
21/04/2018-16:54:40,618 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 1 
21/04/2018-16:54:40,618 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 8 
21/04/2018-16:54:40,618 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 8 
21/04/2018-16:54:40,619 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:54:40,619 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:54:40,623 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:54:40,625 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:54:40,625 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:54:40 
21/04/2018-16:54:43,577 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-16:54:43,582 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 4ms 
21/04/2018-16:54:47,489 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-16:54:47,493 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 3ms 
21/04/2018-16:54:49,812 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:54:49,812 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 7 
21/04/2018-16:54:49,813 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 7 
21/04/2018-16:54:49,813 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 1 
21/04/2018-16:54:49,813 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 1 
21/04/2018-16:54:49,814 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 8 
21/04/2018-16:54:49,815 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 8 
21/04/2018-16:54:49,815 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:54:49,815 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:54:49,819 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:54:49,821 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:54:49,821 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:54:49 
21/04/2018-16:54:53,236 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-16:54:53,236 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 7 
21/04/2018-16:54:53,236 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 7 
21/04/2018-16:54:53,236 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 1 
21/04/2018-16:54:53,236 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 1 
21/04/2018-16:54:53,236 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 8 
21/04/2018-16:54:53,237 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 8 
21/04/2018-16:54:53,237 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-16:54:53,237 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-16:54:53,241 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-16:54:53,241 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-16:54:53,241 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 16:54:53 
21/04/2018-16:55:05,349 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-16:55:06,354 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-21:54:45,843 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-21:54:45,889 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-21:54:45,889 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-21:54:45,895 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-21:54:45,895 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-21:54:45,896 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-21:54:46,861 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:54:46,862 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:54:46,862 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:54:46,862 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:54:46,862 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:54:46,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:54:46,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:54:46,863 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:54:46,865 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:54:46,868 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-21:54:46,879 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:54:46,956 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:54:46 
21/04/2018-21:54:47,605 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-21:54:47,606 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-21:54:47,616 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-21:54:47,616 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-21:54:47,631 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-21:54:47,637 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 5ms 
21/04/2018-21:54:47,720 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-21:54:47,721 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-21:54:47,728 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-21:54:47,728 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-21:54:47,729 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:54:47,729 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-21:54:47,729 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-21:54:47,730 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-21:54:47,758 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-21:54:47,759 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-21:54:47,928 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-21:54:47,929 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-21:54:47,957 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-21:54:47,964 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-21:54:48,196 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-21:54:48,197 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-21:54:48,310 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-21:54:48,311 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-21:54:48,397 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-21:54:48,397 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-21:54:51,620 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-21:54:51,620 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-21:54:51,620 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:54:51,621 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-21:54:52,604 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-21:54:52,607 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-21:55:51,156 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-21:55:51,157 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-21:55:52,942 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-21:55:52,942 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-21:55:59,572 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:55:59,572 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:55:59,572 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:55:59,573 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 18 
21/04/2018-21:55:59,573 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 18 
21/04/2018-21:55:59,573 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 8 
21/04/2018-21:55:59,573 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 8 
21/04/2018-21:55:59,573 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:55:59,573 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:55:59,575 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-21:55:59,575 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:55:59,575 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:55:59 
21/04/2018-21:56:04,087 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:56:04,087 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:56:04,088 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:56:04,088 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:56:04,088 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:56:04,088 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 8 
21/04/2018-21:56:04,088 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 8 
21/04/2018-21:56:04,088 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:56:04,088 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:56:04,090 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-21:56:04,092 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:56:04,092 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:56:04 
21/04/2018-21:56:07,514 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:56:07,514 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:56:07,514 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:56:07,514 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:56:07,515 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:56:07,515 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 8 
21/04/2018-21:56:07,515 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 8 
21/04/2018-21:56:07,515 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:56:07,516 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:56:07,518 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-21:56:07,520 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:56:07,520 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:56:07 
21/04/2018-21:56:10,494 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-21:56:10,495 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-21:56:12,911 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:56:12,911 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:56:12,911 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:56:12,912 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:56:12,912 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:56:12,912 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 4 
21/04/2018-21:56:12,912 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 4 
21/04/2018-21:56:12,912 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:56:12,912 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:56:12,914 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-21:56:12,914 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:56:12,914 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:56:12 
21/04/2018-21:56:16,189 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:56:16,189 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:56:16,189 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:56:16,189 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:56:16,189 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:56:16,189 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 4 
21/04/2018-21:56:16,189 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 4 
21/04/2018-21:56:16,189 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:56:16,190 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:56:16,191 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-21:56:16,191 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:56:16,191 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:56:16 
21/04/2018-21:57:35,243 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-21:57:35,243 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-21:57:37,278 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:37,278 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:37,279 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:37,279 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:37,279 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:37,279 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:37,279 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:37,279 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:37,279 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:37,281 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-21:57:37,283 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:37,283 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:37 
21/04/2018-21:57:39,546 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:39,547 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:39,547 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:39,547 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:39,547 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:39,547 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:39,547 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:39,547 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:39,547 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:39,550 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-21:57:39,551 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:39,552 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:39 
21/04/2018-21:57:41,150 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:41,150 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:41,150 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:41,150 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:41,150 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:41,151 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:41,151 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:41,151 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:41,151 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:41,154 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-21:57:41,155 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:41,155 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:41 
21/04/2018-21:57:41,875 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:41,875 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:41,875 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:41,875 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:41,876 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:41,876 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:41,876 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:41,876 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:41,876 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:41,879 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-21:57:41,880 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:41,880 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:41 
21/04/2018-21:57:42,990 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:42,991 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:42,991 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:42,991 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:42,991 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:42,991 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:42,991 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:42,991 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:42,991 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:42,993 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-21:57:42,994 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:42,994 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:42 
21/04/2018-21:57:43,776 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:43,776 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:43,776 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:43,776 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:43,776 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:43,777 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:43,777 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:43,777 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:43,777 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:43,779 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-21:57:43,780 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:43,780 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:43 
21/04/2018-21:57:44,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:44,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:44,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:44,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:44,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:44,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:44,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:44,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:44,841 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:44,843 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-21:57:44,843 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:44,843 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:44 
21/04/2018-21:57:46,098 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:46,099 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:46,099 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:46,099 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:46,099 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:46,099 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:46,099 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:46,099 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:46,099 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:46,102 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-21:57:46,102 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:46,103 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:46 
21/04/2018-21:57:47,006 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:47,007 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:47,007 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:47,007 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:47,007 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:47,007 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:47,007 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:47,007 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:47,007 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:47,009 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-21:57:47,010 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:47,010 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:47 
21/04/2018-21:57:47,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:47,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:47,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:47,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:47,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:47,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:47,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:47,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:47,840 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:47,842 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-21:57:47,843 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:47,843 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:47 
21/04/2018-21:57:48,419 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:48,419 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:48,419 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:48,419 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:48,419 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:48,419 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:48,419 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:48,419 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:48,420 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:48,422 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-21:57:48,422 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:48,423 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:48 
21/04/2018-21:57:48,810 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:48,810 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:48,810 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:48,810 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:48,810 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:48,810 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:48,810 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:48,810 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:48,811 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:48,813 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-21:57:48,815 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:48,815 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:48 
21/04/2018-21:57:49,039 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:49,039 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,039 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,039 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,039 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,039 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,039 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,039 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:49,039 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:49,042 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-21:57:49,042 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:49,043 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:49 
21/04/2018-21:57:49,247 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:49,248 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,248 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,249 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,251 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,251 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,251 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,251 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:49,251 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:49,254 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-21:57:49,255 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:49,255 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:49 
21/04/2018-21:57:49,458 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:49,459 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,459 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,459 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,459 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,459 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,459 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,459 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:49,459 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:49,462 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-21:57:49,462 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:49,463 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:49 
21/04/2018-21:57:49,661 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:49,662 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,662 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,662 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,662 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,662 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,663 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,663 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:49,664 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:49,672 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 8ms 
21/04/2018-21:57:49,673 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:49,673 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:49 
21/04/2018-21:57:49,826 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:49,826 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,826 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,826 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,826 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,827 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,827 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,827 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:49,827 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:49,829 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-21:57:49,830 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:49,831 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:49 
21/04/2018-21:57:49,976 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:49,977 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,977 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,977 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,977 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,977 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,977 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:49,977 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:49,977 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:49,979 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-21:57:49,980 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:49,980 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:49 
21/04/2018-21:57:54,438 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-21:57:54,439 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:54,439 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:54,439 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:54,439 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:54,439 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:54,439 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-21:57:54,439 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-21:57:54,439 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-21:57:54,441 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-21:57:54,441 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-21:57:54,441 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 21:57:54 
21/04/2018-21:58:30,978 | INFO [class br.com.cinemafx.methods.CreateLogFile] : Efetuando download de log do sistema 
21/04/2018-21:58:41,934 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : Deseja realmente deslogar do sistema? 
21/04/2018-21:58:43,060 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : Opção selecionada: Cancelar 
21/04/2018-21:58:44,557 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-21:58:46,526 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Cancelar 
21/04/2018-22:01:59,340 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-22:02:00,403 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-22:12:28,786 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-22:12:28,803 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-22:12:28,805 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 2ms 
21/04/2018-22:12:28,811 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-22:12:28,811 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-22:12:28,812 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:12:29,256 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-22:12:29,257 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:12:29,257 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:12:29,257 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:12:29,258 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:12:29,258 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:12:29,258 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:12:29,258 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-22:12:29,267 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-22:12:29,270 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-22:12:29,274 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-22:12:29,276 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 22:12:29 
21/04/2018-22:12:29,612 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-22:12:29,613 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:12:29,620 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:12:29,621 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:12:29,629 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-22:12:29,638 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 9ms 
21/04/2018-22:12:29,698 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-22:12:29,699 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:12:29,700 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-22:12:29,701 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-22:12:29,701 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-22:12:29,701 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-22:12:29,701 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-22:12:29,702 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:12:29,716 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:12:29,717 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:12:29,893 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:12:29,894 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:12:29,903 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-22:12:29,915 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 12ms 
21/04/2018-22:12:30,056 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-22:12:30,057 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:12:30,153 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-22:12:30,154 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:12:30,248 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-22:12:30,248 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:12:34,059 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-22:12:34,060 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-22:12:34,060 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:12:34,061 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:12:52,703 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODFILME, NOMEFILME, MINFILME, SINOPSE, IMAGEM FROM TFILMES 
21/04/2018-22:12:52,710 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 7ms 
21/04/2018-22:13:26,323 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-22:13:26,738 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-22:13:42,607 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-22:13:42,628 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-22:13:42,629 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:13:42,636 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-22:13:42,637 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-22:13:42,638 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:13:43,074 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-22:13:43,074 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:13:43,075 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:13:43,075 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:13:43,075 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:13:43,076 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:13:43,076 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:13:43,076 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-22:13:43,083 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-22:13:43,088 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-22:13:43,091 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-22:13:43,094 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 22:13:43 
21/04/2018-22:13:43,469 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-22:13:43,470 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:13:43,482 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:13:43,482 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:13:43,492 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-22:13:43,500 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-22:13:43,554 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-22:13:43,554 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:13:43,555 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-22:13:43,556 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-22:13:43,556 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-22:13:43,556 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-22:13:43,557 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-22:13:43,558 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:13:43,570 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:13:43,571 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:13:44,046 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:13:44,048 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:13:44,055 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-22:13:44,061 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-22:13:44,240 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-22:13:44,241 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:13:44,352 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-22:13:44,353 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:13:44,451 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-22:13:44,452 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:13:47,497 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-22:13:47,498 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-22:13:47,498 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:13:47,499 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:13:57,958 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODFILME, NOMEFILME, MINFILME, SINOPSE FROM TFILMES 
21/04/2018-22:13:57,960 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-22:15:49,072 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-22:15:49,771 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-22:19:42,365 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-22:19:42,386 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-22:19:42,387 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-22:19:42,393 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-22:19:42,394 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-22:19:42,395 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:19:43,030 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-22:19:43,031 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:19:43,031 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:19:43,031 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:19:43,031 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:19:43,031 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:19:43,032 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:19:43,032 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-22:19:43,034 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-22:19:43,038 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 4ms 
21/04/2018-22:19:43,041 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-22:19:43,044 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 22:19:43 
21/04/2018-22:19:43,396 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-22:19:43,397 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:19:43,404 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:19:43,406 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:19:43,412 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-22:19:43,420 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-22:19:43,479 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-22:19:43,480 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:19:43,481 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-22:19:43,482 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-22:19:43,482 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-22:19:43,482 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-22:19:43,482 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-22:19:43,484 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:19:43,517 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:19:43,518 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:19:43,793 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:19:43,794 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:19:43,803 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-22:19:43,809 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-22:19:43,970 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-22:19:43,971 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:19:44,072 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-22:19:44,073 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:19:44,140 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-22:19:44,141 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:19:48,007 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-22:19:48,007 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-22:19:48,008 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:19:48,008 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 0ms 
21/04/2018-22:20:28,462 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-22:20:28,463 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-22:20:31,401 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-22:20:31,401 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-22:20:33,672 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODSESSAO, DATAINI, DATAFIM, CONCAT(CODSALA, ' - ', REFSALA), CONCAT(CODFILME,' - ', NOMEFILME)
FROM VSESSOES
ORDER BY 1 
21/04/2018-22:20:33,674 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 2ms 
21/04/2018-22:20:35,825 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODFILME, NOMEFILME, MINFILME, SINOPSE FROM TFILMES 
21/04/2018-22:20:35,825 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-22:21:25,940 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-22:21:26,756 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-22:21:30,040 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-22:21:30,066 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-22:21:30,068 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:21:30,079 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-22:21:30,080 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-22:21:30,081 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:21:30,620 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-22:21:30,622 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:21:30,622 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:21:30,622 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:21:30,622 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:21:30,623 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:21:30,623 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:21:30,623 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-22:21:30,626 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-22:21:30,629 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-22:21:30,633 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-22:21:30,646 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 22:21:30 
21/04/2018-22:21:31,010 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-22:21:31,011 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:21:31,018 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:21:31,019 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:21:31,026 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-22:21:31,035 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 9ms 
21/04/2018-22:21:31,107 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-22:21:31,108 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:21:31,110 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-22:21:31,110 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-22:21:31,111 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-22:21:31,111 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-22:21:31,112 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-22:21:31,114 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-22:21:31,127 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:21:31,128 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:21:31,315 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:21:31,316 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:21:31,327 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-22:21:31,333 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-22:21:31,467 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-22:21:31,468 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:21:31,558 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-22:21:31,559 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:21:31,662 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-22:21:31,664 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:21:33,151 | ERROR [class br.com.cinemafx.controllers.LoginCtrl] : Erro ao tentar buscar informações do usuário
java.lang.Integer cannot be cast to java.lang.String 
java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String
	at br.com.cinemafx.models.ModelTableColumn$2.updateItem(ModelTableColumn.java:65)
	at javafx.scene.control.TableCell.updateItem(TableCell.java:663)
	at javafx.scene.control.TableCell.indexChanged(TableCell.java:468)
	at javafx.scene.control.IndexedCell.updateIndex(IndexedCell.java:116)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.updateCells(TableRowSkinBase.java:533)
	at com.sun.javafx.scene.control.skin.TableRowSkinBase.init(TableRowSkinBase.java:147)
	at com.sun.javafx.scene.control.skin.TableRowSkin.<init>(TableRowSkin.java:64)
	at javafx.scene.control.TableRow.createDefaultSkin(TableRow.java:212)
	at javafx.scene.control.Control.impl_processCSS(Control.java:872)
	at javafx.scene.Node.processCSS(Node.java:9058)
	at javafx.scene.Node.applyCss(Node.java:9155)
	at com.sun.javafx.scene.control.skin.VirtualFlow.setCellIndex(VirtualFlow.java:1964)
	at com.sun.javafx.scene.control.skin.VirtualFlow.getCell(VirtualFlow.java:1797)
	at com.sun.javafx.scene.control.skin.VirtualFlow.getCellLength(VirtualFlow.java:1879)
	at com.sun.javafx.scene.control.skin.VirtualFlow.computeViewportOffset(VirtualFlow.java:2528)
	at com.sun.javafx.scene.control.skin.VirtualFlow.layoutChildren(VirtualFlow.java:1189)
	at javafx.scene.Parent.layout(Parent.java:1087)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Parent.layout(Parent.java:1093)
	at javafx.scene.Scene.doLayoutPass(Scene.java:552)
	at javafx.scene.Scene.preferredSize(Scene.java:1646)
	at javafx.scene.Scene.impl_preferredSize(Scene.java:1720)
	at javafx.stage.Window$SceneModel.invalidated(Window.java:592)
	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:111)
	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146)
	at javafx.stage.Window.setScene(Window.java:548)
	at javafx.stage.Stage.setScene(Stage.java:252)
	at br.com.cinemafx.controllers.LoginCtrl.showPrincipalFrame(LoginCtrl.java:131)
	at br.com.cinemafx.controllers.LoginCtrl.getUserInfo(LoginCtrl.java:114)
	at br.com.cinemafx.controllers.LoginCtrl.startLogin(LoginCtrl.java:82)
	at br.com.cinemafx.controllers.LoginCtrl.lambda$estrutura$1(LoginCtrl.java:57)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at com.sun.javafx.scene.control.behavior.TextFieldBehavior.fire(TextFieldBehavior.java:179)
	at com.sun.javafx.scene.control.behavior.TextInputControlBehavior.callAction(TextInputControlBehavior.java:178)
	at com.sun.javafx.scene.control.behavior.BehaviorBase.callActionForEvent(BehaviorBase.java:218)
	at com.sun.javafx.scene.control.behavior.TextInputControlBehavior.callActionForEvent(TextInputControlBehavior.java:127)
	at com.sun.javafx.scene.control.behavior.BehaviorBase.lambda$new$74(BehaviorBase.java:135)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$KeyHandler.process(Scene.java:3964)
	at javafx.scene.Scene$KeyHandler.access$1800(Scene.java:3910)
	at javafx.scene.Scene.impl_processKeyEvent(Scene.java:2040)
	at javafx.scene.Scene$ScenePeerListener.keyEvent(Scene.java:2501)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$KeyEventNotification.run(GlassViewEventHandler.java:217)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$KeyEventNotification.run(GlassViewEventHandler.java:149)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleKeyEvent$352(GlassViewEventHandler.java:248)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleKeyEvent(GlassViewEventHandler.java:247)
	at com.sun.glass.ui.View.handleKeyEvent(View.java:546)
	at com.sun.glass.ui.View.notifyKey(View.java:966)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
21/04/2018-22:21:33,584 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-22:21:33,584 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-22:21:33,584 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:21:33,585 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:21:43,420 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-22:21:44,544 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-22:23:58,054 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-22:23:58,082 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-22:23:58,083 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:23:58,088 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-22:23:58,088 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-22:23:58,089 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-22:23:58,605 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-22:23:58,606 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:23:58,606 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:23:58,606 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:23:58,606 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:23:58,607 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:23:58,607 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:23:58,607 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-22:23:58,611 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-22:23:58,614 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-22:23:58,619 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-22:23:58,624 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 22:23:58 
21/04/2018-22:23:58,961 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-22:23:58,962 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:23:58,970 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:23:58,971 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:23:58,979 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-22:23:58,986 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 7ms 
21/04/2018-22:23:59,048 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-22:23:59,048 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:23:59,050 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-22:23:59,051 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-22:23:59,051 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-22:23:59,051 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-22:23:59,052 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-22:23:59,054 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-22:23:59,086 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:23:59,086 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:23:59,391 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:23:59,391 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:23:59,405 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-22:23:59,415 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 9ms 
21/04/2018-22:23:59,592 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-22:23:59,594 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:23:59,724 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-22:23:59,725 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:23:59,791 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-22:23:59,791 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:24:04,595 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-22:24:04,596 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-22:24:04,596 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:24:04,597 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:24:10,354 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODFILME, NOMEFILME, MINFILME, SINOPSE FROM TFILMES 
21/04/2018-22:24:10,355 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-22:25:22,292 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODFILME, NOMEFILME, MINFILME, SINOPSE FROM TFILMES 
21/04/2018-22:25:22,293 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-22:25:24,166 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODFILME, NOMEFILME, MINFILME, SINOPSE FROM TFILMES 
21/04/2018-22:25:24,167 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-22:25:26,040 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODFILME, NOMEFILME, MINFILME, SINOPSE FROM TFILMES 
21/04/2018-22:25:26,040 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-22:25:28,301 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODFILME, NOMEFILME, MINFILME, SINOPSE FROM TFILMES 
21/04/2018-22:25:28,301 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-22:25:30,327 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODFILME, NOMEFILME, MINFILME, SINOPSE FROM TFILMES 
21/04/2018-22:25:30,328 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-22:25:37,280 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODFILME, NOMEFILME, MINFILME, SINOPSE FROM TFILMES 
21/04/2018-22:25:37,280 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 0ms 
21/04/2018-22:25:51,593 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-22:25:53,078 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-22:43:39,854 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-22:43:39,871 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-22:43:39,872 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-22:43:39,875 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-22:43:39,876 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-22:43:39,877 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:43:40,005 | WARN [class br.com.cinemafx.controllers.LoginCtrl] : Senha informada está incorreta 
21/04/2018-22:43:42,191 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-22:43:42,192 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-22:43:42,192 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 0ms 
21/04/2018-22:43:42,199 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-22:43:42,199 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-22:43:42,200 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:43:42,475 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-22:43:42,475 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:43:42,476 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:43:42,476 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:43:42,476 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:43:42,476 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:43:42,477 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:43:42,477 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-22:43:42,479 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-22:43:42,483 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 3ms 
21/04/2018-22:43:42,487 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-22:43:42,489 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 22:43:42 
21/04/2018-22:43:42,779 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-22:43:42,780 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:43:42,786 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:43:42,787 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:43:42,802 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-22:43:42,808 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-22:43:42,864 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-22:43:42,865 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:43:42,866 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-22:43:42,867 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-22:43:42,867 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-22:43:42,867 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-22:43:42,868 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-22:43:42,869 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 1ms 
21/04/2018-22:43:42,884 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:43:42,885 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:43:43,019 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-22:43:43,019 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:43:43,026 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-22:43:43,032 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 6ms 
21/04/2018-22:43:43,132 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-22:43:43,133 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:43:43,206 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-22:43:43,206 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-22:43:43,260 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-22:43:43,262 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-22:43:45,524 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-22:43:45,524 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-22:43:45,525 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-22:43:45,525 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 0ms 
21/04/2018-22:45:15,286 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-22:45:15,629 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
21/04/2018-23:32:12,029 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT COUNT(1) FROM TUSU WHERE LOGIN = ? 
21/04/2018-23:32:12,049 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-23:32:12,050 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-23:32:12,056 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU
WHERE LOGIN = ? 
21/04/2018-23:32:12,057 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : 1º Parâmetro(java.lang.String): CLARA 
21/04/2018-23:32:12,058 | INFO [class br.com.cinemafx.controllers.LoginCtrl] : ResultSet Source criado em 1ms 
21/04/2018-23:32:12,531 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : SELECT CODSESSAO, CODFILME, CODEXIB, CODSALA, INTEGRAL, DATAHORA, QTDING,
CASE WHEN INTEGRAL 	= 'S' THEN ROUND((QTDING * VLREXIB),2)
	 ELSE ROUND(((QTDING * VLREXIB) / 2),2)
END AS VLRTOTAL
FROM
  (SELECT COUNT(1) AS QTDING, ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, 
	SES.DATAHORA, ING.INTEGRAL, AVG(EXB.VLREXIB) AS VLREXIB
   FROM TINGRESSOS ING
   JOIN TSESSOES SES ON (ING.CODSESSAO = SES.CODSESSAO)
   JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
   WHERE (0 = ? OR SES.CODSESSAO = ?)
   AND (0 = ? OR SES.CODSALA = ?)
   AND (0 = ? OR SES.CODEXIB = ?)
   AND SES.DATAHORA >= ?
   AND SES.DATAHORA <= ?
   GROUP BY ING.CODSESSAO, SES.CODFILME, SES.CODEXIB, SES.CODSALA, ING.INTEGRAL) X 
21/04/2018-23:32:12,532 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 1º Parâmetro(java.lang.Integer): 0 
21/04/2018-23:32:12,533 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-23:32:12,533 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 3º Parâmetro(java.lang.Integer): 0 
21/04/2018-23:32:12,533 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 4º Parâmetro(java.lang.Integer): 0 
21/04/2018-23:32:12,533 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 5º Parâmetro(java.lang.Integer): 0 
21/04/2018-23:32:12,534 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 6º Parâmetro(java.lang.Integer): 0 
21/04/2018-23:32:12,534 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 7º Parâmetro(java.time.LocalDate): 2018-03-22 
21/04/2018-23:32:12,537 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : 8º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-23:32:12,542 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : ResultSet Source criado em 5ms 
21/04/2018-23:32:12,546 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : O usuário solicitou a atualização dos gráficos. 
21/04/2018-23:32:12,549 | INFO [class br.com.cinemafx.controllers.IngressoCtrl] : Gráficos alimentados e estruturados, término ás 21/04/2018 23:32:12 
21/04/2018-23:32:12,894 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-23:32:12,896 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-23:32:12,904 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-23:32:12,905 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-23:32:12,913 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-23:32:12,922 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 9ms 
21/04/2018-23:32:13,016 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-23:32:13,017 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-23:32:13,019 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : SELECT SES.CODSESSAO, SAL.CODSALA, FIL.CODFILME, EXB.CODEXIB, SES.DATAHORA
    FROM TSESSOES SES
        JOIN TFILMES FIL ON (SES.CODFILME = FIL.CODFILME)
        JOIN TGENEROS GEN ON (FIL.CODGENERO = GEN.CODGENERO)
        JOIN TSALAS SAL ON (SES.CODSALA = SAL.CODSALA)
        JOIN TEXIBS EXB ON (SES.CODEXIB = EXB.CODEXIB)
    WHERE SES.CODSESSAO <> 0
    AND DATE_FORMAT(SES.DATAHORA, '%Y-%m-%d') >= ?
    AND DATE_FORMAT((SES.DATAHORA + INTERVAL FIL.MINFILME MINUTE), '%Y-%m-%d') <= ?
    AND (? = 0 OR SAL.CODSALA = ?)
    ORDER BY 1 
21/04/2018-23:32:13,020 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 1º Parâmetro(java.time.LocalDate): 2018-04-21 
21/04/2018-23:32:13,020 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 2º Parâmetro(java.time.LocalDate): 2018-04-22 
21/04/2018-23:32:13,021 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 3º Parâmetro(java.lang.String): 0 
21/04/2018-23:32:13,021 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : 4º Parâmetro(java.lang.String): 0 
21/04/2018-23:32:13,023 | INFO [class br.com.cinemafx.controllers.SessaoCtrl] : ResultSet Source criado em 2ms 
21/04/2018-23:32:13,039 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-23:32:13,040 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-23:32:13,199 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODGENERO, NOMEGENERO FROM TGENEROS 
21/04/2018-23:32:13,200 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 0ms 
21/04/2018-23:32:13,208 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODFILME, NOMEFILME, SINOPSE,
CUSTOFILME, CODGENERO, MINFILME, IMAGEM
FROM TFILMES 
21/04/2018-23:32:13,217 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 8ms 
21/04/2018-23:32:13,360 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODEXIB, NOMEEXIB, VLREXIB FROM TEXIBS 
21/04/2018-23:32:13,361 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-23:32:13,454 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODSALA, REFSALA, CAPACIDADE FROM TSALAS 
21/04/2018-23:32:13,455 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-23:32:13,539 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : SELECT CODUSU, NOMEUSU, LOGIN, SENHA, ATIVO
FROM TUSU 
21/04/2018-23:32:13,541 | INFO [class br.com.cinemafx.dbcontrollers.DBObjects] : ResultSet Source criado em 1ms 
21/04/2018-23:32:15,924 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : SELECT TEXTO FROM TPARAMETROS
WHERE CHAVE = ?
AND CODUSU IN (?, 0)
ORDER BY CODUSU DESC 
21/04/2018-23:32:15,925 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 1º Parâmetro(java.lang.String): VERSAOATUALDB 
21/04/2018-23:32:15,925 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : 2º Parâmetro(java.lang.Integer): 0 
21/04/2018-23:32:15,926 | INFO [class br.com.cinemafx.controllers.PrincipalCtrl] : ResultSet Source criado em 1ms 
21/04/2018-23:32:16,808 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODFILME, NOMEFILME, MINFILME, SINOPSE FROM TFILMES 
21/04/2018-23:32:16,810 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-23:32:19,109 | WARN [class br.com.cinemafx.controllers.IngressoCtrl] : Selecione algum filme para filtrar 
21/04/2018-23:32:20,999 | WARN [class br.com.cinemafx.controllers.IngressoCtrl] : Selecione alguma linha para remover 
21/04/2018-23:32:22,607 | INFO [class br.com.cinemafx.methods.KeySearchStage] : SELECT CODFILME, NOMEFILME, MINFILME, SINOPSE FROM TFILMES 
21/04/2018-23:32:22,608 | INFO [class br.com.cinemafx.methods.KeySearchStage] : ResultSet Source criado em 1ms 
21/04/2018-23:32:48,498 | INFO [class br.com.cinemafx.controllers.Main] : Deseja realmente finalizar o sistema? 
21/04/2018-23:32:49,549 | INFO [class br.com.cinemafx.controllers.Main] : Opção selecionada: Finalizar 
